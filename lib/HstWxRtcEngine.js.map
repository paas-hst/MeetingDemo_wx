{"version":3,"sources":["webpack://HstWxRtcEngine/webpack/bootstrap","webpack://HstWxRtcEngine/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://HstWxRtcEngine/./node_modules/@babel/runtime/helpers/createClass.js","webpack://HstWxRtcEngine/./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js","webpack://HstWxRtcEngine/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://HstWxRtcEngine/./node_modules/javascript-state-machine/lib/state-machine.js","webpack://HstWxRtcEngine/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://HstWxRtcEngine/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://HstWxRtcEngine/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://HstWxRtcEngine/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://HstWxRtcEngine/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://HstWxRtcEngine/./src/common/logger.js","webpack://HstWxRtcEngine/./src/main/util/msg-dispatcher.js","webpack://HstWxRtcEngine/./src/common/common.js","webpack://HstWxRtcEngine/./src/main/util/store.js","webpack://HstWxRtcEngine/./src/main/util/websocket.js","webpack://HstWxRtcEngine/./src/common/enums.js","webpack://HstWxRtcEngine/./src/common/event-registry.js","webpack://HstWxRtcEngine/./src/common/promise-handler.js","webpack://HstWxRtcEngine/./src/main/media/video-manager.js","webpack://HstWxRtcEngine/./src/main/media/share-manager.js","webpack://HstWxRtcEngine/./src/main/util/draw.js","webpack://HstWxRtcEngine/./src/main/media/page-store.js","webpack://HstWxRtcEngine/./src/main/media/readonly-white-board.js","webpack://HstWxRtcEngine/./src/main/media/white-board-manager.js","webpack://HstWxRtcEngine/./src/main/media/media-manager.js","webpack://HstWxRtcEngine/./src/main/media/audio-manager.js","webpack://HstWxRtcEngine/./src/main/util/protocol-sender.js","webpack://HstWxRtcEngine/./src/main/util/tx-room.js","webpack://HstWxRtcEngine/./src/main/rtc-engine.js","webpack://HstWxRtcEngine/./src/main/online/online-manager.js","webpack://HstWxRtcEngine/./src/export/subevent-export.js","webpack://HstWxRtcEngine/./src/export/platform-export.js","webpack://HstWxRtcEngine/./src/export/media-export.js","webpack://HstWxRtcEngine/./src/main/message/message-manager.js","webpack://HstWxRtcEngine/./src/index.js","webpack://HstWxRtcEngine/./src/export/online-export.js","webpack://HstWxRtcEngine/./src/export/enums-export.js","webpack://HstWxRtcEngine/./src/export/message-export.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","decorators","context","desc","keys","forEach","initializer","slice","reverse","reduce","decorator","undefined","arr","len","arr2","Array","factory","sources","source","arguments","mixin","build","config","max","plugin","plugins","methods","properties","defineProperties","hook","fsm","additional","method","args","concat","apply","camelize","label","result","words","split","toLowerCase","charAt","toUpperCase","substring","prepended","prepend","Config","options","StateMachine","this","defaults","states","transitions","map","lifecycle","configureLifecycle","init","configureInitTransition","data","configureData","configureMethods","wildcard","configureTransitions","configurePlugins","addState","push","addStateLifecycleNames","onEnter","onLeave","on","addTransition","indexOf","addTransitionLifecycleNames","onBefore","onAfter","mapTransition","transition","from","to","state","active","builtin","configure","isArray","transitionFor","transitionsFor","allStates","allTransitions","Exception","UNOBSERVED","JSM","observers","fire","is","isPending","pending","can","seek","cannot","entry","transit","changed","observeUnchangedState","onPendingTransition","beginTransit","unshift","observeEvents","observersForEvent","onInvalidTransition","endTransit","failTransit","doTransit","observe","observer","event","events","previousEvent","previousResult","pluggable","shift","then","catch","PublicMethods","_fsm","PublicProperties","set","Error","version","cstor","message","current","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arrayLikeToArray","iter","iterator","minLen","toString","constructor","test","console","info","_getFormatter","warn","error","_dateFormat","fmt","date","Date","opt","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","k","regexp","RegExp","exec","replace","padStart","MsgDispatcher","handlerMap","Map","msgId","handler","logger","msg","socket","id","e","generateGUID","S4","Math","random","getAddrs","str","urlStrs","addr","asyncWrapper","excutor","Promise","resolve","tracelog","oldValue","argString","JSON","stringify","trace","getCtrlPoint","ps","a","b","pAx","parseInt","X","pAy","Y","last","pBx","pBy","pA","x","y","pB","stringToColor","strCL","sexadecimalCL","toLocaleUpperCase","BB","GG","getEventPostfix","userId","mediaType","mediaId","websocket","restoring","userInfo","appId","groupId","loginParams","accessUrl","token","companyId","forceLogin","extendInfo","mutexType","registered","msgDispatcher","HstWebSocket","log","addrUrl","proxyIndex","isShowLog","opened_hook","opened","closed_hook","closed","error_hook","limitConnect","getTimer","connectStatus","_createWebsocket","url","success","res","fail","complete","wx","connectSocket","_eventBind","self","onOpen","onClose","onMessage","parse","onError","close","createWebsocket","readyState","timerArray","fn","getTime","timer","val","send","MediaType","MediaOper","RecvState","Graphics","RecvMagicMode","EventResult","EventType","DisplayMode","_triggerEvents","eventEntry","callbacks","callbackItem","callback","eventName","_registry","_triggerCachedEvents","off","allEvents","retain","j","trigger","promiseHandler","reject","eventRegistry","videoParamMap","defaultVideoParam","frameRate","width","height","bitRate","deviceId","videoParam","setVideoParam","protocolSender","sendPublishMediaReq","sendRecvMediaReq","screenShareStream","screenShareStreamRefCount","isCreatingStream","screenShareParam","shareParam","setScreenShareParam","srcUserId","draw","line","canv","obj","ratio","beginPath","lineCap","lineWidth","brush_size","strokeStyle","color","moveTo","x1","y1","lineTo","x2","y2","stroke","closePath","curve","points","item","ctrlP","bezierCurveTo","text","font","fontsize","textBaseline","fillStyle","indexLine","txt","fillText","left","top","rectangle","rect","PageStore","boardData","paintMap","_init","pageData","paintObjs","assign","board","items","type","pid","current_pid","getCurPage","page","file_path","convert_file_path","board_name","gid","splice","paintObj","ox","oy","ReadOnlyWhiteboard","params","isClosing","pageStore","firstFullData","scaleRatio","parentWidth","parentHeight","canvasEle","canvasCtx","canvasSizeChangeCallback","canvasLeft","canvasTop","canvasWidth","canvasHeight","sourcePaints","msg_seq_id","displayMode","displayParam","streamId","streamToken","streamServer","addMsgHandler","_dealAmendData","_pageChangeHandle","_moveGraph","_heartBeat","_dealFullData","_processLoginResp","_onWebsocketOpen","_onWebsocketClosed","_onWebsocketError","sendLoginRecvChannelReq","parentEle","param","_showWhiteBoard","toFixed","_refreshRender","_showWhiteBoardDbwz","_showWhiteBoardDbsy","_showWhiteBoardDbsf","renderEle","canvasSizeChange","getContext","_emptyCanvas","boardInfo","boardManager","_getFileUrl","clearRect","convertPath","getConvertFilePath","count","handle","setInterval","cacheFileUrlMap","clearInterval","curPage","fullPath","imgUrl","getImageInfo","src","seal","createImage","onload","drawImage","onerror","path","getFilePath","_waitGetImageUrl","_drawImage","_drawAllPaint","err","findPagePaints","_drawPaint","paint","findPaintByGid","_checkMsgSeq","action","addPaintObj","_drawAmendData","amendPaintObj","deletePaintObj","pageObj","pageItem","setCurPage","addPage","deletePage","clearPaints","gmov","graphs","movePaintObj","removeWhiteBoard","intervalHandle","removeChild","sync_end","_initCanvas","tryRestoreWhiteBoardRender","mediaName","getBoardName","totalPage","getPageCount","seq_id","sendGetWhiteBoardFullDataReq","Store","_onCreateWhiteBoardRes","_onCloseWhiteBoardRes","_onGetWhiteBoardFileUrlRes","_onRestoreWhiteBoard","restoreWhiteBoards","setWhiteBoardRender","setDisplayMode","_doStartReceiveWhiteBoard","startReceiveWhiteBoard","whiteBoards","sendCreateWhiteboardReq","sendCloseWhiteboardReq","setRenderElement","Number","isInteger","_findWhiteBoard","index","filePath","rootPath","substr","lastIndexOf","fileUrls","httpsUrl","search","total","sendGetWhiteBoardFileUrlReq","upPcMap","downPcMap","restoreDownTracks","onNotifyUserMediaState","onNotifyGroupMediaStates","onNotifyUserJoinGroup","onNotifyUserLeaveGroup","onRecvStreamRes","_onRestoreDownTrack","track","videoEle","setMediaRender","_doStartReceiveMedia","startReceiveMedia","audioManager","startPublishAudio","videoManager","startPublishVideo","shareManager","startScreenShare","whiteBoardManger","startPublishWhiteBoard","stopPublishAudio","stopPublishVideo","stopScreenShare","stopPublishWhiteBoard","startReceiveAudio","startReceiveVideo","startReceiveScreenShare","stopReceiveAudio","stopReceiveVideo","stopReceiveScreenShare","stopReceiveWhiteBoard","unsetWhiteBoardRender","setLocalVideoRender","setLocalScreenShareRender","pc","findDownPcByUserMeida","srcObject","mediaStream","curSpkDevId","setAudioSpeaker","getTracks","stop","user_id","operation","group_id","media_id","stream_server","media_type","downPc","bind_id","recv","stopRecvStream","DownPeerConnection","size","startRecvStream","stream_id","subscribe_token","onStartRecvWhiteBoardRes","onStopRecvWhiteBoardRes","_getEventType","media_description","groupUsers","user_info","user","media_info","media","curMicDevId","audioMagicValue","recvMagicAudio","devId","setCurMicDevId","mediaManager","values","upTracks","sendSetAudioMagic","sinkId","setSinkId","audio","business","channel_type","channelType","report_type","reportType","app_id","company_id","client_guid","os_type","osType","mutex_type","force_login","registered_user","protocol_version","sdk_type","extend_info","recvState","media_owner","source_type","parmas","defaultParmas","cli_seq_id","board_type","whiteboard_id","client_id","bindId","stream_token","description","pcId","pc_id","sdp","candidate","sdpMid","sdpMLineIndex","getClientId","param_type","param_value","dst_user_id","dstUserId","msg_id","src_user_id","white_list","whiteList","black_list","blackList","serverDomain","requestNum","heart","heartBeatReq","requestSeq","requestTask","req","request","header","code","errCode","errMsg","abort","userID","roomType","roomInfo","roomID","heartBeat","setTimeout","clearRequest","RtcEngine","onWebSocketClosed","doRestore","onWebSocketOpened","sendLoginReq","onLeaveGroup","wbManager","reinitialize","onLogout","onDestroy","onLoginRes","txRoom","getLoginInfo","loginSuccess","sdkAppId","sdkAppID","userSig","accountType","loginFailed","onLogoutRes","logoutSuccess","logoutFailed","onJoinGroupRes","room_id","createRoom","joinSuccess","serverRoomId","serverUserId","txRoomId","privateMapKey","joinFailed","onLeaveGroupRes","leaveSuccess","leaveFailed","onForceLogout","onKickOut","sendKickOutRes","onDoInit","initSuccess","onTransition","onInitSuccess","doLogin","onInitFailed","onDoLogin","buildGetGateWayUrl","gwAddr","onLoginSuccess","doJoin","onLoginFailed","onDoJoin","sendJoinGroupReq","onJoinSuccess","onJoinFailed","onDoLeave","sendLeaveGroupReq","onLeaveSuccess","onLeaveFailed","onDoLogout","sendLogoutReq","onLogoutSuccess","onLogoutFailed","onDoDestroy","onRestoring","doInit","cachedUserList","onGetOnlineUsersRes","onOnlineUsersNotify","onInviteRes","onNotifyInvite","onNotifyIgnoreInvite","onCancelInviteRes","onNotifyCancelInvite","floor","pageInfo","totalPages","page_info","total_pages","cur_page","member_state_list","u","uid","onlineInfo","online_info","customState","custom_state","seqId","callee_info","calleeInfo","operate","userName","user_name","HstRtcEngine","HstEngine","hstRtcEngine","_onRecvUserMsg","_onRecvGroupMsg","_onRecvServerAck","sendUserMsg","sendGroupMsgWithWhiteList","sendGroupMsgWithBlackList","sendGroupMsg","sendUserMsgAck","sendGroupMsgAck","process","subEvent","unsubEvent","rtcEngine","login","joinGroup","leaveGroup","doLeave","logout","doLogout","destroy","doDestroy","startPublishMedia","stopPublishMedia","stopReceiveMedia","unsetMediaRender","setSendMagicAudioValue","setRecvMagicAudioMode","createWhiteBoard","closeWhiteBoard","setWhiteBoardDisplayMode","getOnlineUsers","onlineManager","invite","replyInvite","cancelInvite","initOnline","SCREEN_SHARE","AUDIO","VIDEO","TRANSPARENT_DATA","WHITE_BOARD","OnlineType","OFFLINE","ONLINE","DBWZ","DBSY","DBSF","initEnums","msgManger","initMessage"],"mappings":"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","file":"HstWxRtcEngine.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nmodule.exports = _applyDecoratedDescriptor;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"StateMachine\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StateMachine\"] = factory();\n\telse\n\t\troot[\"StateMachine\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(target, sources) {\n  var n, source, key;\n  for(n = 1 ; n < arguments.length ; n++) {\n    source = arguments[n];\n    for(key in source) {\n      if (source.hasOwnProperty(key))\n        target[key] = source[key];\n    }\n  }\n  return target;\n}\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//-------------------------------------------------------------------------------------------------\n\nvar mixin = __webpack_require__(0);\n\n//-------------------------------------------------------------------------------------------------\n\nmodule.exports = {\n\n  build: function(target, config) {\n    var n, max, plugin, plugins = config.plugins;\n    for(n = 0, max = plugins.length ; n < max ; n++) {\n      plugin = plugins[n];\n      if (plugin.methods)\n        mixin(target, plugin.methods);\n      if (plugin.properties)\n        Object.defineProperties(target, plugin.properties);\n    }\n  },\n\n  hook: function(fsm, name, additional) {\n    var n, max, method, plugin,\n        plugins = fsm.config.plugins,\n        args    = [fsm.context];\n\n    if (additional)\n      args = args.concat(additional)\n\n    for(n = 0, max = plugins.length ; n < max ; n++) {\n      plugin = plugins[n]\n      method = plugins[n][name]\n      if (method)\n        method.apply(plugin, args);\n    }\n  }\n\n}\n\n//-------------------------------------------------------------------------------------------------\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//-------------------------------------------------------------------------------------------------\n\nfunction camelize(label) {\n\n  if (label.length === 0)\n    return label;\n\n  var n, result, word, words = label.split(/[_-]/);\n\n  // single word with first character already lowercase, return untouched\n  if ((words.length === 1) && (words[0][0].toLowerCase() === words[0][0]))\n    return label;\n\n  result = words[0].toLowerCase();\n  for(n = 1 ; n < words.length ; n++) {\n    result = result + words[n].charAt(0).toUpperCase() + words[n].substring(1).toLowerCase();\n  }\n\n  return result;\n}\n\n//-------------------------------------------------------------------------------------------------\n\ncamelize.prepended = function(prepend, label) {\n  label = camelize(label);\n  return prepend + label[0].toUpperCase() + label.substring(1);\n}\n\n//-------------------------------------------------------------------------------------------------\n\nmodule.exports = camelize;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//-------------------------------------------------------------------------------------------------\n\nvar mixin    = __webpack_require__(0),\n    camelize = __webpack_require__(2);\n\n//-------------------------------------------------------------------------------------------------\n\nfunction Config(options, StateMachine) {\n\n  options = options || {};\n\n  this.options     = options; // preserving original options can be useful (e.g visualize plugin)\n  this.defaults    = StateMachine.defaults;\n  this.states      = [];\n  this.transitions = [];\n  this.map         = {};\n  this.lifecycle   = this.configureLifecycle();\n  this.init        = this.configureInitTransition(options.init);\n  this.data        = this.configureData(options.data);\n  this.methods     = this.configureMethods(options.methods);\n\n  this.map[this.defaults.wildcard] = {};\n\n  this.configureTransitions(options.transitions || []);\n\n  this.plugins = this.configurePlugins(options.plugins, StateMachine.plugin);\n\n}\n\n//-------------------------------------------------------------------------------------------------\n\nmixin(Config.prototype, {\n\n  addState: function(name) {\n    if (!this.map[name]) {\n      this.states.push(name);\n      this.addStateLifecycleNames(name);\n      this.map[name] = {};\n    }\n  },\n\n  addStateLifecycleNames: function(name) {\n    this.lifecycle.onEnter[name] = camelize.prepended('onEnter', name);\n    this.lifecycle.onLeave[name] = camelize.prepended('onLeave', name);\n    this.lifecycle.on[name]      = camelize.prepended('on',      name);\n  },\n\n  addTransition: function(name) {\n    if (this.transitions.indexOf(name) < 0) {\n      this.transitions.push(name);\n      this.addTransitionLifecycleNames(name);\n    }\n  },\n\n  addTransitionLifecycleNames: function(name) {\n    this.lifecycle.onBefore[name] = camelize.prepended('onBefore', name);\n    this.lifecycle.onAfter[name]  = camelize.prepended('onAfter',  name);\n    this.lifecycle.on[name]       = camelize.prepended('on',       name);\n  },\n\n  mapTransition: function(transition) {\n    var name = transition.name,\n        from = transition.from,\n        to   = transition.to;\n    this.addState(from);\n    if (typeof to !== 'function')\n      this.addState(to);\n    this.addTransition(name);\n    this.map[from][name] = transition;\n    return transition;\n  },\n\n  configureLifecycle: function() {\n    return {\n      onBefore: { transition: 'onBeforeTransition' },\n      onAfter:  { transition: 'onAfterTransition'  },\n      onEnter:  { state:      'onEnterState'       },\n      onLeave:  { state:      'onLeaveState'       },\n      on:       { transition: 'onTransition'       }\n    };\n  },\n\n  configureInitTransition: function(init) {\n    if (typeof init === 'string') {\n      return this.mapTransition(mixin({}, this.defaults.init, { to: init, active: true }));\n    }\n    else if (typeof init === 'object') {\n      return this.mapTransition(mixin({}, this.defaults.init, init, { active: true }));\n    }\n    else {\n      this.addState(this.defaults.init.from);\n      return this.defaults.init;\n    }\n  },\n\n  configureData: function(data) {\n    if (typeof data === 'function')\n      return data;\n    else if (typeof data === 'object')\n      return function() { return data; }\n    else\n      return function() { return {};  }\n  },\n\n  configureMethods: function(methods) {\n    return methods || {};\n  },\n\n  configurePlugins: function(plugins, builtin) {\n    plugins = plugins || [];\n    var n, max, plugin;\n    for(n = 0, max = plugins.length ; n < max ; n++) {\n      plugin = plugins[n];\n      if (typeof plugin === 'function')\n        plugins[n] = plugin = plugin()\n      if (plugin.configure)\n        plugin.configure(this);\n    }\n    return plugins\n  },\n\n  configureTransitions: function(transitions) {\n    var i, n, transition, from, to, wildcard = this.defaults.wildcard;\n    for(n = 0 ; n < transitions.length ; n++) {\n      transition = transitions[n];\n      from  = Array.isArray(transition.from) ? transition.from : [transition.from || wildcard]\n      to    = transition.to || wildcard;\n      for(i = 0 ; i < from.length ; i++) {\n        this.mapTransition({ name: transition.name, from: from[i], to: to });\n      }\n    }\n  },\n\n  transitionFor: function(state, transition) {\n    var wildcard = this.defaults.wildcard;\n    return this.map[state][transition] ||\n           this.map[wildcard][transition];\n  },\n\n  transitionsFor: function(state) {\n    var wildcard = this.defaults.wildcard;\n    return Object.keys(this.map[state]).concat(Object.keys(this.map[wildcard]));\n  },\n\n  allStates: function() {\n    return this.states;\n  },\n\n  allTransitions: function() {\n    return this.transitions;\n  }\n\n});\n\n//-------------------------------------------------------------------------------------------------\n\nmodule.exports = Config;\n\n//-------------------------------------------------------------------------------------------------\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\nvar mixin      = __webpack_require__(0),\n    Exception  = __webpack_require__(6),\n    plugin     = __webpack_require__(1),\n    UNOBSERVED = [ null, [] ];\n\n//-------------------------------------------------------------------------------------------------\n\nfunction JSM(context, config) {\n  this.context   = context;\n  this.config    = config;\n  this.state     = config.init.from;\n  this.observers = [context];\n}\n\n//-------------------------------------------------------------------------------------------------\n\nmixin(JSM.prototype, {\n\n  init: function(args) {\n    mixin(this.context, this.config.data.apply(this.context, args));\n    plugin.hook(this, 'init');\n    if (this.config.init.active)\n      return this.fire(this.config.init.name, []);\n  },\n\n  is: function(state) {\n    return Array.isArray(state) ? (state.indexOf(this.state) >= 0) : (this.state === state);\n  },\n\n  isPending: function() {\n    return this.pending;\n  },\n\n  can: function(transition) {\n    return !this.isPending() && !!this.seek(transition);\n  },\n\n  cannot: function(transition) {\n    return !this.can(transition);\n  },\n\n  allStates: function() {\n    return this.config.allStates();\n  },\n\n  allTransitions: function() {\n    return this.config.allTransitions();\n  },\n\n  transitions: function() {\n    return this.config.transitionsFor(this.state);\n  },\n\n  seek: function(transition, args) {\n    var wildcard = this.config.defaults.wildcard,\n        entry    = this.config.transitionFor(this.state, transition),\n        to       = entry && entry.to;\n    if (typeof to === 'function')\n      return to.apply(this.context, args);\n    else if (to === wildcard)\n      return this.state\n    else\n      return to\n  },\n\n  fire: function(transition, args) {\n    return this.transit(transition, this.state, this.seek(transition, args), args);\n  },\n\n  transit: function(transition, from, to, args) {\n\n    var lifecycle = this.config.lifecycle,\n        changed   = this.config.options.observeUnchangedState || (from !== to);\n\n    if (!to)\n      return this.context.onInvalidTransition(transition, from, to);\n\n    if (this.isPending())\n      return this.context.onPendingTransition(transition, from, to);\n\n    this.config.addState(to);  // might need to add this state if it's unknown (e.g. conditional transition or goto)\n\n    this.beginTransit();\n\n    args.unshift({             // this context will be passed to each lifecycle event observer\n      transition: transition,\n      from:       from,\n      to:         to,\n      fsm:        this.context\n    });\n\n    return this.observeEvents([\n                this.observersForEvent(lifecycle.onBefore.transition),\n                this.observersForEvent(lifecycle.onBefore[transition]),\n      changed ? this.observersForEvent(lifecycle.onLeave.state) : UNOBSERVED,\n      changed ? this.observersForEvent(lifecycle.onLeave[from]) : UNOBSERVED,\n                this.observersForEvent(lifecycle.on.transition),\n      changed ? [ 'doTransit', [ this ] ]                       : UNOBSERVED,\n      changed ? this.observersForEvent(lifecycle.onEnter.state) : UNOBSERVED,\n      changed ? this.observersForEvent(lifecycle.onEnter[to])   : UNOBSERVED,\n      changed ? this.observersForEvent(lifecycle.on[to])        : UNOBSERVED,\n                this.observersForEvent(lifecycle.onAfter.transition),\n                this.observersForEvent(lifecycle.onAfter[transition]),\n                this.observersForEvent(lifecycle.on[transition])\n    ], args);\n  },\n\n  beginTransit: function()          { this.pending = true;                 },\n  endTransit:   function(result)    { this.pending = false; return result; },\n  failTransit:  function(result)    { this.pending = false; throw result;  },\n  doTransit:    function(lifecycle) { this.state = lifecycle.to;           },\n\n  observe: function(args) {\n    if (args.length === 2) {\n      var observer = {};\n      observer[args[0]] = args[1];\n      this.observers.push(observer);\n    }\n    else {\n      this.observers.push(args[0]);\n    }\n  },\n\n  observersForEvent: function(event) { // TODO: this could be cached\n    var n = 0, max = this.observers.length, observer, result = [];\n    for( ; n < max ; n++) {\n      observer = this.observers[n];\n      if (observer[event])\n        result.push(observer);\n    }\n    return [ event, result, true ]\n  },\n\n  observeEvents: function(events, args, previousEvent, previousResult) {\n    if (events.length === 0) {\n      return this.endTransit(previousResult === undefined ? true : previousResult);\n    }\n\n    var event     = events[0][0],\n        observers = events[0][1],\n        pluggable = events[0][2];\n\n    args[0].event = event;\n    if (event && pluggable && event !== previousEvent)\n      plugin.hook(this, 'lifecycle', args);\n\n    if (observers.length === 0) {\n      events.shift();\n      return this.observeEvents(events, args, event, previousResult);\n    }\n    else {\n      var observer = observers.shift(),\n          result = observer[event].apply(observer, args);\n      if (result && typeof result.then === 'function') {\n        return result.then(this.observeEvents.bind(this, events, args, event))\n                     .catch(this.failTransit.bind(this))\n      }\n      else if (result === false) {\n        return this.endTransit(false);\n      }\n      else {\n        return this.observeEvents(events, args, event, result);\n      }\n    }\n  },\n\n  onInvalidTransition: function(transition, from, to) {\n    throw new Exception(\"transition is invalid in current state\", transition, from, to, this.state);\n  },\n\n  onPendingTransition: function(transition, from, to) {\n    throw new Exception(\"transition is invalid while previous transition is still in progress\", transition, from, to, this.state);\n  }\n\n});\n\n//-------------------------------------------------------------------------------------------------\n\nmodule.exports = JSM;\n\n//-------------------------------------------------------------------------------------------------\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//-----------------------------------------------------------------------------------------------\n\nvar mixin    = __webpack_require__(0),\n    camelize = __webpack_require__(2),\n    plugin   = __webpack_require__(1),\n    Config   = __webpack_require__(3),\n    JSM      = __webpack_require__(4);\n\n//-----------------------------------------------------------------------------------------------\n\nvar PublicMethods = {\n  is:                  function(state)       { return this._fsm.is(state)                                     },\n  can:                 function(transition)  { return this._fsm.can(transition)                               },\n  cannot:              function(transition)  { return this._fsm.cannot(transition)                            },\n  observe:             function()            { return this._fsm.observe(arguments)                            },\n  transitions:         function()            { return this._fsm.transitions()                                 },\n  allTransitions:      function()            { return this._fsm.allTransitions()                              },\n  allStates:           function()            { return this._fsm.allStates()                                   },\n  onInvalidTransition: function(t, from, to) { return this._fsm.onInvalidTransition(t, from, to)              },\n  onPendingTransition: function(t, from, to) { return this._fsm.onPendingTransition(t, from, to)              },\n}\n\nvar PublicProperties = {\n  state: {\n    configurable: false,\n    enumerable:   true,\n    get: function() {\n      return this._fsm.state;\n    },\n    set: function(state) {\n      throw Error('use transitions to change state')\n    }\n  }\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction StateMachine(options) {\n  return apply(this || {}, options);\n}\n\nfunction factory() {\n  var cstor, options;\n  if (typeof arguments[0] === 'function') {\n    cstor   = arguments[0];\n    options = arguments[1] || {};\n  }\n  else {\n    cstor   = function() { this._fsm.apply(this, arguments) };\n    options = arguments[0] || {};\n  }\n  var config = new Config(options, StateMachine);\n  build(cstor.prototype, config);\n  cstor.prototype._fsm.config = config; // convenience access to shared config without needing an instance\n  return cstor;\n}\n\n//-------------------------------------------------------------------------------------------------\n\nfunction apply(instance, options) {\n  var config = new Config(options, StateMachine);\n  build(instance, config);\n  instance._fsm();\n  return instance;\n}\n\nfunction build(target, config) {\n  if ((typeof target !== 'object') || Array.isArray(target))\n    throw Error('StateMachine can only be applied to objects');\n  plugin.build(target, config);\n  Object.defineProperties(target, PublicProperties);\n  mixin(target, PublicMethods);\n  mixin(target, config.methods);\n  config.allTransitions().forEach(function(transition) {\n    target[camelize(transition)] = function() {\n      return this._fsm.fire(transition, [].slice.call(arguments))\n    }\n  });\n  target._fsm = function() {\n    this._fsm = new JSM(this, config);\n    this._fsm.init(arguments);\n  }\n}\n\n//-----------------------------------------------------------------------------------------------\n\nStateMachine.version  = '3.0.1';\nStateMachine.factory  = factory;\nStateMachine.apply    = apply;\nStateMachine.defaults = {\n  wildcard: '*',\n  init: {\n    name: 'init',\n    from: 'none'\n  }\n}\n\n//===============================================================================================\n\nmodule.exports = StateMachine;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(message, transition, from, to, current) {\n  this.message    = message;\n  this.transition = transition;\n  this.from       = from;\n  this.to         = to;\n  this.current    = current;\n}\n\n\n/***/ })\n/******/ ]);\n});","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\r\n * 自定义日志输出，主要是添加时间\r\n */\r\nclass Logger {\r\n  /**\r\n   * state级别日志，状态机专用\r\n   * @param {*} data \r\n   */\r\n  state(data) {\r\n    console.info(\"%c\" + this._getFormatter() + \" \" + data, \"color: #FF6347\");\r\n  }\r\n\r\n  /**\r\n   * trace级别日志\r\n   * @param {*} data \r\n   */\r\n  trace(data) {\r\n    console.info(\"%c\" + this._getFormatter() + \" \" + data, \"color: #008080\");\r\n    //console.info((new Error(\"backtrace\")).stack);\r\n  }\r\n\r\n  /**\r\n   * info级别日志\r\n   * @param {*} data \r\n   */\r\n  info(data) {\r\n    console.info(this._getFormatter() + \" \" + data);\r\n    //console.info((new Error(\"backtrace\")).stack);\r\n  }\r\n\r\n  /**\r\n   * warn级别日志\r\n   * @param {*} data \r\n   */\r\n  warn(data) {\r\n    console.warn(this._getFormatter() + \" \" + data);\r\n  }\r\n\r\n  /**\r\n   * error级别日志\r\n   * @param {*} data \r\n   */\r\n  error(data) {\r\n    console.error(this._getFormatter() + \" \" + data);\r\n  }\r\n\r\n  /**\r\n   * info级别日志别名\r\n   * @param {*} data \r\n   */\r\n  log(data) {\r\n    this.info(data);\r\n  }\r\n\r\n  /**\r\n   * 获取格式化时间\r\n   */\r\n  _getFormatter() {\r\n    return this._dateFormat(\"[YY-MM-DD HH:mm:SS.sss]\");\r\n  }\r\n\r\n  /**\r\n   * 时间格式化\r\n   * @param {*} fmt \r\n   */\r\n  _dateFormat(fmt) {\r\n    let date = new Date();\r\n    const opt = {\r\n      \"Y+\": date.getFullYear().toString(),        // 年\r\n      \"M+\": (date.getMonth() + 1).toString(),     // 月\r\n      \"D+\": date.getDate().toString(),            // 日\r\n      \"H+\": date.getHours().toString(),           // 时\r\n      \"m+\": date.getMinutes().toString(),         // 分\r\n      \"S+\": date.getSeconds().toString(),         // 秒\r\n      \"s+\": date.getMilliseconds().toString()     // 毫秒\r\n    };\r\n    for (let k in opt) {\r\n        let regexp = new RegExp(\"(\" + k + \")\").exec(fmt);\r\n        if (regexp) {\r\n          fmt = fmt.replace(regexp[1], (regexp[1].length == 1) ? (opt[k]) : (opt[k].padStart(regexp[1].length, \"0\")))\r\n        };\r\n    };\r\n    return fmt;\r\n  }  \r\n}\r\n\r\nexport default new Logger();","\r\nimport logger from \"../../common/logger\";\r\n\r\n/**\r\n * 消息分发器\r\n */\r\nclass MsgDispatcher {\r\n  constructor() {\r\n    this.handlerMap = new Map();\r\n  }\r\n\r\n  /**\r\n   * 添加消息处理器\r\n   * @param {*} msgId \r\n   * @param {*} handler \r\n   */\r\n  addMsgHandler(msgId, handler) {\r\n    if (!this.handlerMap[msgId]) {\r\n      this.handlerMap[msgId] = handler;\r\n    } else {\r\n      logger.error(\"Message: \" + msgId + \" handler already exists!\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 移除消息处理器\r\n   * @param {*} msgId \r\n   */\r\n  removeMsgHandler(msgId) {\r\n    if (this.handlerMap[msgId]) {\r\n      this.handlerMap.delete(msgId);\r\n    } else {\r\n      logger.error(\"Cannot find message handler: \" + msgId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 移除所有处理器\r\n   */\r\n  clearMsgHandler() {\r\n    this.handlerMap = new Map();\r\n  }\r\n\r\n  /**\r\n   * 消息处理\r\n   * @param {*} msg \r\n   * @param {*} socket \r\n   */\r\n  onMessage(msg, socket) {\r\n    try {\r\n      if (msg.id) {\r\n        if (this.handlerMap[msg.id]) {\r\n          this.handlerMap[msg.id](msg, socket);\r\n        } else {\r\n          logger.warn(\"No handler for msg: \" + msg.id);\r\n        }\r\n      } else {\r\n        logger.error(\"Unexpected!!!\");\r\n      }\r\n    } catch (e) {\r\n     console.error(e) \r\n    }\r\n  }\r\n}\r\n\r\nexport default MsgDispatcher;\r\n\r\n","import logger from \"./logger\"\r\n\r\n\r\n// Resolution array\r\nlet resolutionArray = [328*240, 480*360, 640*480, 800*600, 1280*720, 1440*900, 1920*1080];\r\n\r\n// Frame rate array\r\nlet frameRateArray = [5, 10, 15, 18, 20, 25, 30];\r\n\r\n// BitRate control table for h265/vp9\r\nlet lowBitRateTable = [\r\n// 5     10   15   18   20   25   30  (fps)\r\n  [130, 180, 220, 230, 240, 260, 290],    // 320*240\r\n  [157, 233, 277, 304, 336, 366, 431],    // 480*360\r\n  [220, 270, 330, 372, 392, 450, 520],    // 640*480\r\n  [230, 305, 393, 483, 505, 610, 725],    // 800*600\r\n  [229, 339, 489, 613, 630, 730, 910],    // 1280*720\r\n  [294, 498, 653, 823, 927, 1151, 1355],  // 1440*900\r\n  [370, 670, 870, 1058, 1150, 1410, 1530] // 1920*1080\r\n];\r\n\r\n// BitRate control table for h264/vp8\r\nlet highBitRateTable = [\r\n// 5     10   15   18   20   25   30  (fps)\r\n  [50, 100, 150, 180, 200, 250, 300],       // 320*240\r\n  [87, 173, 261, 314, 346, 434, 521],       // 480*360\r\n  [120, 240, 360, 432, 460, 600, 720],      // 640*480\r\n  [187, 375, 563, 675, 700, 900, 1125],     // 800*600\r\n  [239, 479, 719, 863, 900, 1100, 1400],    // 1280*720\r\n  [384, 768, 1153, 1383, 1537, 1921, 2305], // 1440*900\r\n  [480, 960, 1440, 1728, 1920, 2400, 3000]  // 1920*1080\r\n];\r\n\r\n/**\r\n * 获取帧率在帧率表的索引\r\n * @param {*} frameRate \r\n */\r\nfunction _getFrameRateIndex(frameRate) {\r\n  let index = 0;\r\n  for ( ; index < frameRateArray.length; index++) {\r\n    if (frameRate <= frameRateArray[index]) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  // 比最大的帧率还大\r\n  if (index === frameRateArray.length) {\r\n    logger.warn(\"Frame rate is too big, \", frameRate);\r\n    index--;\r\n  }\r\n\r\n  return index;\r\n}\r\n\r\n/**\r\n * 获取分辨率在分辨率表的索引\r\n * @param {*} width \r\n * @param {*} height \r\n */\r\nfunction _getResolutionIndex(width, height) {\r\n  let resolution = width * height;\r\n\r\n  let index = 0;\r\n  for ( ; index < resolutionArray.length; index++) {\r\n    if (resolution <= resolutionArray[index]) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  // 比最大的分辨率还大\r\n  if (index === resolutionArray.length) {\r\n    logger.warn(\"Resolution is too big, \", width + \"*\" + height);\r\n    index--;\r\n  }\r\n\r\n  return index;\r\n}\r\n\r\n/**\r\n * 根据视频的宽、高、帧率计算码率\r\n * @param {*} width \r\n * @param {*} height \r\n * @param {*} frameRate \r\n */\r\nexport function getBitRate(width, height, frameRate) {\r\n  let frameIndex = _getFrameRateIndex(frameRate);\r\n  let resolutionIndex = _getResolutionIndex(width, height);\r\n  \r\n  return highBitRateTable[resolutionIndex][frameIndex];\r\n}\r\n\r\n/**\r\n * 生成GUID\r\n */\r\nexport function generateGUID() {\r\n  function S4() {\r\n    return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n  }\r\n  return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\r\n}\r\n\r\nexport function getAddrs (str, urlStrs) {\r\n  let urlAddrs = urlStrs.split(';')\r\n  for (let addr of urlAddrs) {\r\n    if (addr.indexOf(str) > -1) {\r\n      return addr;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * 检测操作系统类型\r\n */\r\nexport function detectOS() { \r\n  if ((navigator.platform == \"Win32\") || (navigator.platform == \"Windows\")) {\r\n    return \"windows\";\r\n  } else if ((navigator.platform == \"Mac68K\") \r\n    || (navigator.platform == \"MacPPC\") \r\n    || (navigator.platform == \"Macintosh\") \r\n    || (navigator.platform == \"MacIntel\")) {\r\n    return \"mac\";\r\n  } else if (String(navigator.platform).indexOf(\"Linux\") > -1) {\r\n    return \"linux\";\r\n  } else if (navigator.userAgent.indexOf('Android') > -1 \r\n    || navigator.userAgent.indexOf('Linux') > -1) {\r\n    return \"android\";\r\n  } else if (navigator.userAgent.indexOf('iPhone') > -1) {\r\n    return \"ios\";\r\n  } else {\r\n    return \"unknown\";\r\n  }\r\n}\r\n\r\n/**\r\n * 函数同步转异步包装器\r\n * @param {*} excutor 待执行函数\r\n */\r\nexport function asyncWrapper(excutor) {\r\n  let promise = new Promise(function(resolve) {\r\n    resolve();\r\n  });\r\n  promise.then(()=>{excutor()});\r\n}\r\n\r\n/**\r\n * 打印函数跟踪日志的装饰器\r\n * @param {*} target \r\n * @param {*} name \r\n * @param {*} descriptor \r\n */\r\nexport function tracelog(target, name, descriptor) {\r\n  var oldValue = descriptor.value;\r\n\r\n  descriptor.value = function() {\r\n    let argString = \"\";\r\n    for (let i = 0; i < arguments.length; i++) {\r\n      if (argString) {\r\n        argString += \", \" + JSON.stringify(arguments[i])\r\n      } else {\r\n        argString += JSON.stringify(arguments[i])\r\n      }\r\n    }\r\n\r\n    if (argString) {\r\n      logger.trace(`${name}: ` + argString);\r\n    } else {\r\n      logger.trace(`\"${name}\"`);\r\n    }\r\n    \r\n    return oldValue.apply(this, arguments);\r\n  };\r\n\r\n  return descriptor;\r\n}\r\n\r\n// 两点确定三次贝塞尔曲线函数的两个控制点\r\nexport const getCtrlPoint = (ps, i, a, b) => {\r\n  if (!a || !b) {\r\n    a = 0.25;\r\n    b = 0.25;\r\n  }\r\n  // 处理两种极端情形\r\n  if (i < 1) {\r\n    var pAx = parseInt(ps[0].X) + (ps[1].X - ps[0].X) * a;\r\n    var pAy = parseInt(ps[0].Y) + (ps[1].Y - ps[0].Y) * a;\r\n  } else {\r\n    var pAx = parseInt(ps[i].X) + (ps[i + 1].X - ps[i - 1].X) * a;\r\n    var pAy = parseInt(ps[i].Y) + (ps[i + 1].Y - ps[i - 1].Y) * a;\r\n  }\r\n  if (i > ps.length - 3) {\r\n    var last = ps.length - 1\r\n    var pBx = parseInt(ps[last].X) - (ps[last].X - ps[last - 1].X) * b;\r\n    var pBy = parseInt(ps[last].Y) - (ps[last].Y - ps[last - 1].Y) * b;\r\n  } else {\r\n    var pBx = parseInt(ps[i + 1].X) - (ps[i + 2].X - ps[i].X) * b;\r\n    var pBy = parseInt(ps[i + 1].Y) - (ps[i + 2].Y - ps[i].Y) * b;\r\n  }\r\n  return {\r\n    pA: {\r\n      x: pAx,\r\n      y: pAy\r\n    },\r\n    pB: {\r\n      x: pBx,\r\n      y: pBy\r\n    }\r\n  }\r\n}\r\n\r\n// 获取字符串的真实长度（字节长度） \r\nconst getTrueLength = (str) => {\r\n  var len = str.length,\r\n    truelen = 0;\r\n  for (var x = 0; x < len; x++) {\r\n    if (str.charCodeAt(x) > 128) {\r\n      truelen += 2;\r\n    } else {\r\n      truelen += 1;\r\n    }\r\n  }\r\n  return truelen;\r\n}\r\n\r\n// 按字节长度截取字符串，返回substr截取位置  \r\nconst cutString = (str, leng) => {\r\n  var len = str.length,\r\n    tlen = len,\r\n    nlen = 0;\r\n  for (var x = 0; x < len; x++) {\r\n    if (str.charCodeAt(x) > 128) {\r\n      if (nlen + 2 < leng) {\r\n        nlen += 2;\r\n      } else {\r\n        tlen = x;\r\n        break;\r\n      }\r\n    } else {\r\n      if (nlen + 1 < leng) {\r\n        nlen += 1;\r\n      } else {\r\n        tlen = x;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return tlen;\r\n}\r\n//ctx_2d        getContext(\"2d\") 对象  \r\n//lineheight    段落文本行高  \r\n//bytelength    设置单字节文字一行内的数量  \r\n//text          写入画面的段落文本  \r\n//startleft     开始绘制文本的 x 坐标位置（相对于画布）  \r\n//starttop      开始绘制文本的 y 坐标位置（相对于画布）  \r\nexport const writeTextOnCanvas = (ctx_2d, lineheight, bytelength, text, startleft, starttop) => {\r\n  for (var i = 1; getTrueLength(text) > 0; i++) {\r\n    var tl = cutString(text, bytelength);\r\n    ctx_2d.fillText(text.substr(0, tl).replace(/^\\s+|\\s+$/, \"\"), startleft, (i - 1) * lineheight + starttop);\r\n    text = text.substr(tl);\r\n  }\r\n}\r\n\r\n/**\r\n * 预加载白板图片\r\n * @param {*} url \r\n * @param {*} callback \r\n * @param {*} n \r\n */\r\nexport const preloadImage = (url, callback, n = 0) => {\r\n  wx.downloadFile({\r\n    url: url,\r\n    success: function(res) {\r\n      if (res.statusCode === 200) {\r\n        console.warn(res)\r\n        callback(res.tempFilePath)\r\n      } else {\r\n        console.warn(\"Unexpected status code: \" + res.statusCode)\r\n      }\r\n    },\r\n    fail: function() {\r\n      logger.error(\"Download image failed: \" + url)\r\n      if (n > 5) return\r\n      n++;\r\n      preloadImage(url, callback, n);\r\n    }\r\n  })\r\n  // let img = new Image()\r\n  // img.onload = () => {\r\n  //   callback && callback()\r\n  // }\r\n  // img.onerror = () => {\r\n  //   if (n > 10) return\r\n  //   n++\r\n  //   preloadImage(url, callback, n)\r\n  // }\r\n  // img.src = url\r\n}\r\n\r\n/**\r\n * 字符串到颜色的转换\r\n * @param {*} strCL \r\n */\r\nexport function stringToColor(strCL) {\r\n\tvar sexadecimalCL;\r\n\t// 判断十进制是整型还是字符串，字符串为负数十进制，整型为正数十进制\r\n\tif(typeof(strCL) == \"string\"){\r\n\t\tsexadecimalCL = (parseInt(strCL) >>> 0).toString(16).toLocaleUpperCase();\r\n\t}\r\n\telse{\r\n\t\tsexadecimalCL = parseInt(strCL).toString(16);\r\n\t}\r\n\twhile(sexadecimalCL.length < 6) {\r\n\t\tsexadecimalCL = \"0\" + sexadecimalCL;\r\n\t}\r\n\t// 前端color#RRGGBB，转换成客户端类型#BBGGRR\r\n\tvar BB = sexadecimalCL.substring(sexadecimalCL.length - 2);\r\n\tvar GG = sexadecimalCL.substring(sexadecimalCL.length - 4, sexadecimalCL.length - 2);\r\n\tvar RR = sexadecimalCL.substring(sexadecimalCL.length - 6, sexadecimalCL.length - 4);\r\n\treturn \"#\" + RR + GG + BB;\r\n}\r\n\r\n/**\r\n * 有些媒体事件，需要使用后缀进行隔离，否则可能会相互影响\r\n * @param {*} userId \r\n * @param {*} mediaType \r\n * @param {*} mediaId \r\n */\r\nexport function getEventPostfix(userId, mediaType, mediaId) {\r\n  if (userId) {\r\n    return \"_\" + userId + \"_\" + mediaType + \"_\" + mediaId;\r\n  } else {\r\n    return \"_\" + mediaType + \"_\" + mediaId;\r\n  }\r\n}\r\n\r\n/**\r\n * 判断参数是否合法\r\n * @param {} param \r\n */\r\nexport function checkParam(param) {\r\n  return param !== null && param !== undefined && param !== '';\r\n}","import MsgDispatcher from \"./msg-dispatcher\"\r\nimport { detectOS, getAddrs } from \"../../common/common\"\r\nimport logger from \"../../common/logger\";\r\n/**\r\n * 全局数据保存区\r\n * 注意：数据应该优先放到对应模块中，只有明确放在全局可以简化依赖关系，\r\n * 有利于降低代码复杂度，才可以放到Store中\r\n */\r\nclass Store {\r\n  constructor() {\r\n    // 与信令网关之间的连接\r\n    this.websocket = null;\r\n\r\n    // 断线恢复标志\r\n    this.restoring = false;\r\n\r\n    // 用户信息\r\n    this.userInfo = {\r\n      appId: null,\r\n      groupId: null,\r\n      userId: null,\r\n    };\r\n\r\n    // 登录信息\r\n    this.loginParams = {\r\n      accessUrl: \"\",\r\n      token: null,\r\n      companyId: \"\",\r\n      forceLogin: 0,    // 0是非强制登录 1是强制登录\r\n      extendInfo: \"\",\r\n      mutexType: \"web\",\r\n      registered: 1     // 0是非注册，1是注册\r\n    }\r\n\r\n    // Protocol handler\r\n    this.msgDispatcher = new MsgDispatcher();\r\n  }\r\n  \r\n  /**\r\n   * 获取ClientID\r\n   */\r\n  getClientId() {\r\n    return \"{\" + this.userInfo.appId \r\n      + \";\" + this.userInfo.groupId \r\n      + \"};\" + this.userInfo.userId;\r\n  }\r\n\r\n  /**\r\n   * 构造获取CP的URL参数\r\n   */\r\n  buildGetGateWayUrl(accessUrl) {\r\n    return accessUrl + \"?appType=24&appId=\" + this.appId \r\n      + \"&ver=\" + SDK_VERSION \r\n      + \"&comid=\" + this.companyId \r\n      + \"&os=wechat\"\r\n      + \"&token=\" + this.token;\r\n  }\r\n}\r\n\r\nexport default new Store();\r\n","import logger from \"../../common/logger\"\r\n\r\n/**\r\n * 对原生websocket的封装\r\n */\r\nclass HstWebSocket {\r\n  constructor(options) {\r\n    logger.log(options);\r\n    this.socket = {};\r\n    this.addrUrl = options.addrUrl;\r\n    this.proxyIndex = 0;\r\n    this.isShowLog = true;\r\n    this.handler = options.handler;\r\n    this.opened_hook = options.opened || function() {}; // socket握手成功钩子\r\n    this.closed_hook = options.closed || function() {}; // socket链接断开钩子\r\n    this.error_hook = options.error || function() {};\r\n    this.limitConnect = this.getTimer();\r\n    this.connectStatus = true\r\n    this._createWebsocket();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 创建websocket\r\n   */\r\n  _createWebsocket() {\r\n    if (!(this.addrUrl instanceof Array)) {\r\n      throw new Error(\"value is not Array\");\r\n    }\r\n    if (this.proxyIndex < this.addrUrl.length) {\r\n      let options = {\r\n        url: this.addrUrl[this.proxyIndex],\r\n        success: function(res) {\r\n          logger.info(\"Create websocket success.\");\r\n        },\r\n        fail: function(res) {\r\n          logger.error(\"Create websocket failed!\" + res);\r\n        },\r\n        complete: function(res) {\r\n          logger.info(\"Create websocket complete.\");\r\n        }\r\n      }\r\n      this.socket = wx.connectSocket(options);\r\n      if (!this.socket) {\r\n        logger.error(\"Connect socket failed: \" + this.addrUrl);\r\n        return;\r\n      }\r\n\r\n      this._eventBind();\r\n    } else {\r\n      logger.error(\"Unexpected!\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绑定事件处理\r\n   * @param {*} socket \r\n   */\r\n  _eventBind() {\r\n    let self = this\r\n    this.socket.onOpen(function(res) {\r\n      logger.log(\"onOpen: \" + JSON.stringify(res));\r\n      self.opened_hook(arguments);\r\n    });\r\n\r\n    this.socket.onClose(function(res){\r\n      logger.log(\"onClose: \" + JSON.stringify(res));\r\n      logger.info(\"websocket 链接断开！\");\r\n      self.closed_hook(arguments)\r\n    });\r\n\r\n    this.socket.onMessage(function(res) {\r\n      let msg = JSON.parse(res.data);\r\n      if (msg.id != 30000) { // 白板心跳消息太多了\r\n        logger.log(\"===> Recv msg from \" + self.addrUrl + \": \" + res.data);\r\n      }\r\n      self.handler.onMessage(msg);\r\n    });\r\n\r\n    this.socket.onError(function(res){\r\n      logger.warn(res);\r\n      self.error_hook(arguments);\r\n      if (self.socket !== undefined) {\r\n        self.socket.close();\r\n      }\r\n    })\r\n  }\r\n  \r\n  /**\r\n   * 重连处理\r\n   */\r\n  reconnect() {\r\n    if (!this.connectStatus) return\r\n    this.limitConnect(function() {\r\n      this.proxyIndex++;\r\n    });\r\n\r\n    this.createWebsocket();\r\n  }\r\n\r\n  /**\r\n   * 获取原生websocket\r\n   */\r\n  getSocket() {\r\n    if (this.socket && this.socket.readyState === 1) {\r\n      return this.socket;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 暂时没使用\r\n   */\r\n  getTimer() {\r\n    var timerArray = [];\r\n    return function(fn) {\r\n      timerArray.push(new Date().getTime());\r\n      var timer = new Date().getTime();\r\n      if (timer - timerArray[0] > 5000) {\r\n        timerArray = [];\r\n        fn.apply(this, arguments);\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 暂时没使用\r\n   * @param {*} val \r\n   */\r\n  setAddr(val) {\r\n    if (!(val instanceof Array)) {\r\n      throw new Error(\"value is not Array\");\r\n    }\r\n    this.addrUrl = val;\r\n    this.proxyIndex = 0;\r\n    this.createWebsocket();\r\n  }\r\n\r\n  /**\r\n   * 发送消息\r\n   * @param {*} msg \r\n   */\r\n  send(msg) {\r\n    if (this.socket && this.socket.readyState === 1) {\r\n      logger.log(\"<=== Send msg to \" + this.addrUrl + \": \" + msg);\r\n      this.socket.send({\r\n        data: msg,\r\n        success: function(res) {\r\n        },\r\n        fail: function(res) {\r\n          logger.error(\"Send failed!\");\r\n        },\r\n        complete: function(res) {\r\n        }\r\n      });\r\n    } else {\r\n      logger.error(\"Send msg failed: \" + msg);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 关闭websocket\r\n   */\r\n  close() {\r\n    if (this.socket) {\r\n      this.socket.close();\r\n      this.socket = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default HstWebSocket;\r\n","\r\nexport var MediaType = {\r\n  \"SCREEN_SHARE\": 0,\r\n  \"AUDIO\": 1,\r\n  \"VIDEO\": 2,\r\n  \"WHITE_BOARD\": 4\r\n};\r\n\r\nexport var MediaOper = {\r\n  \"STOP_PUBLISH\": 0,\r\n  \"START_PUBLISH\": 1\r\n};\r\n\r\nexport var RecvState = {\r\n  \"STOP_RECV\": 0,\r\n  \"START_RECV\": 1\r\n};\r\n\r\nexport var Graphics = {\r\n  'LINE': 'line',\r\n  'CURVE': 'curve',\r\n  'TEXT': 'text'\r\n}\r\n\r\nexport var RecvMagicMode = {\r\n  \"FOLLOW\": 0,\r\n  \"ONLY_ORIGIN\": 1,\r\n  \"ONLY_MAGIC\": 2\r\n}\r\n\r\nexport var EventResult = {\r\n  \"SUCCESS\": 0,\r\n  \"FAILED\": 1\r\n}\r\n\r\nexport var EventType = {\r\n  EVENT_INIT                    : \"EVENT_INIT\",\r\n  EVENT_LOGIN                   : \"EVENT_LOGIN\",\r\n  EVENT_LOGOUT                  : \"EVENT_LOGOUT\",\r\n  EVENT_JOIN_GROUP              : \"EVENT_JOIN_GROUP\",\r\n  EVENT_LEAVE_GROUP             : \"EVENT_LEAVE_GROUP\",\r\n  EVENT_START_RCV_MEDIA         : \"EVENT_START_RECV_MEDIA\",\r\n  EVENT_STOP_RCV_MEDIA          : \"EVENT_STOP_RECV_MEDIA\",\r\n  EVENT_START_PUB_MEDIA         : \"EVENT_START_PUB_MEDIA\",\r\n  EVENT_STOP_PUB_MEDIA          : \"EVENT_STOP_PUB_MEDIA\",\r\n  EVENT_GET_ONLINE_USERS        : \"EVENT_GET_ONLINE_USERS\",\r\n  EVENT_ONLINE_USERS_NOTIFY     : \"EVENT_ONLINE_USERS_NOTIFY\",\r\n  EVENT_INVITE                  : \"EVENT_INVITE\",\r\n  EVENT_NOTICE_IGNORE_INVITE    : \"EVENT_NOTICE_IGNORE_INVITE\",\r\n  EVENT_REPLY_INVITE            : \"EVENT_REPLY_INVITE\",\r\n  EVENT_CANCEL_INVITE           : \"EVENT_CANCEL_INVITE\",\r\n  EVENT_NOTICE_CANCEL_INVITE    : \"EVENT_NOTICE_CANCEL_INVITE\",\r\n  EVENT_CREATE_WHITE_BOARD      : \"EVENT_CREATE_WHITE_BOARD\",\r\n  EVENT_CLOSE_WHITE_BOARD       : \"EVENT_CLOSE_WHITE_BOARD\"\r\n}\r\n\r\nexport var DisplayMode = {\r\n  DBWZ: 1,\r\n  DBSY: 2,\r\n  DBSF: 3\r\n}","// 基于Backbone.Events(Backbone.js 1.1.2)改造的事件注册中心，主要改造点如下：\n// 1）简化接口和实现，去除暂时用不到的接口和功能。\n// 2）支持事件缓存，确保事件不丢失\n\nconst slice = [].slice\n\n/**\n * 订阅事件\n * @param {*} eventName \n * @param {*} callback \n * @param {*} context \n */\nexport function on (eventName, callback, context) {\n  const _registry = this._registry || (this._registry = {})\n  const eventEntry = _registry[eventName] || (_registry[eventName] = {events: [], callbacks: []})\n  eventEntry.callbacks.push({ callback: callback, context: context })\n  _triggerCachedEvents(eventEntry, callback, context);\n  return this\n}\n\n/**\n * 取消订阅事件\n * @param {*} eventName \n * @param {*} callback \n * @param {*} context \n */\nexport function off (eventName, callback, context) {\n  // 都为空，表示删除所有注册事件\n  if (!eventName && !callback && !context) {\n    delete this._registry\n    return this\n  }\n  // 如果未指定事件，则遍历所有事件删除回调函数\n  const allEvents = eventName ? [eventName] : Object.keys(this._registry)\n  for (let i = 0, l = allEvents.length; i < l; i++) {\n    let event = allEvents[i]\n    const callbacks = this._registry[event].callbacks;\n    if (callbacks) {\n      const retain = this._registry[event].callbacks = []\n      if (callback || context) {\n        for (let j = 0, k = callbacks.length; j < k; j++) {\n          const callbackItem = callbacks[j]\n          if ((callback && callback !== callbackItem.callback) \n            || (context && context !== callbackItem.context)) {\n            retain.push(callbackItem)\n          }\n        }\n      }\n      if (!retain.length) {\n        delete this._registry[event];\n      }\n    } else {\n      console.warn(\"Empty callbacks of event: \" + event);\n    }\n  }\n  return this\n}\n\n/**\n * 触发事件\n * @param {*} eventName \n */\nexport function trigger (eventName) {\n  if (!this._registry) {\n    this._registry = {};\n  }\n  const args = slice.call(arguments, 1)\n  const eventEntry = this._registry[eventName] || (this._registry[eventName] = {events:[], callbacks:[]});\n  if (eventEntry.callbacks.length > 0) {\n    _triggerEvents(eventEntry, args, this)\n  } else {\n    if (eventEntry.events.length < 1024) {\n      eventEntry.events.push(args);\n    } else {\n      console.warn(\"Events queue is full, event: \" + eventName);\n    }\n  }\n  return this\n}\n\n/**\n * 触发缓存事件\n * @param {*} eventEntry \n * @param {*} callback \n * @param {*} context \n */\nfunction _triggerCachedEvents(eventEntry, callback, context) {\n  if (eventEntry.events.length > 0) {\n    for (const event of eventEntry.events) {\n      callback.apply(context || this, event);\n    }\n    eventEntry.events = [];\n  }\n}\n\n/**\n * 实时触发事件\n * @param {*} eventEntry \n * @param {*} args \n * @param {*} context \n */\nfunction _triggerEvents (eventEntry, args, context) {\n  let i = -1;\n  const l = eventEntry.callbacks.length;\n  while (++i < l) {\n    const callbackItem = eventEntry.callbacks[i];\n    callbackItem.callback.apply(callbackItem.context || context, args);\n  }\n}\n\nexport default {\n  on, off, trigger\n}\n","import eventRegistry from \"./event-registry\";\r\n\r\n// 使用事件回调的方式来封装Promise以方便外部处理异步调用\r\nexport const promiseHandler = function(eventName, fn) {\r\n  return new Promise((resolve, reject) => {\r\n    //FIXME：这里是否要考虑once场景\r\n    eventRegistry.on(eventName, function() {\r\n      // 第一个参数为异步调用的处理结果\r\n      let result = Array.prototype.shift.call(arguments);\r\n      if (parseInt(result) === 0) {\r\n        fn && fn.call(this);\r\n        resolve(...arguments);\r\n      } else {\r\n        reject(...arguments);\r\n      }\r\n    });\r\n  });\r\n};\r\n","import protocolSender from \"../util/protocol-sender\"\r\nimport Store from \"../util/store\"\r\nimport { RecvState, MediaType, MediaOper, EventType } from \"../../common/enums\"\r\nimport { promiseHandler } from \"../../common/promise-handler\"\r\nimport logger from \"../../common/logger\"\r\nimport { tracelog, getBitRate } from \"../../common/common\"\r\nimport mediaManager from \"./media-manager\"\r\nimport { getEventPostfix } from '../../common/common'\r\n\r\nclass VideoManager {\r\n  constructor() {\r\n    // User defined video parameters\r\n    // Media Id: { width: xx, height: xx, frameRate: xx, bitRate: xx }\r\n    this.videoParamMap = new Map();\r\n\r\n    // Default video parameters\r\n    this.defaultVideoParam = { frameRate: 15, width: 640, height: 480, bitRate: 0 };\r\n  }\r\n  /**\r\n   * 开始广播视频\r\n   * @param {*} deviceId \r\n   * @param {*} videoParam \r\n   */\r\n  @tracelog\r\n  startPublishVideo(deviceId, videoParam) {\r\n    if (!deviceId) { // TODO：不允许默认设备\r\n      logger.error(\"Invalid deviceId!\");\r\n      return;\r\n    }\r\n\r\n    // videoParam: { width: 640, height: 360, frameRate: 15, bitRate: 1000 }\r\n    if (videoParam) { \r\n      if (!('width' in videoParam) || typeof videoParam.width !== 'number') {\r\n        logger.error(\"No width or invalid width in videoParam!\");\r\n        return;\r\n      }\r\n\r\n      if (!('height' in videoParam) || typeof videoParam.height !== 'number') {\r\n        logger.error(\"No height or invalid height in videoParam!\");\r\n        return;\r\n      }\r\n      \r\n      if (!('frameRate' in videoParam) || typeof videoParam.frameRate !== 'number') {\r\n        logger.error(\"No frameRate or invaid frameRate in videoParam!\");\r\n        return;\r\n      }\r\n      \r\n      if (!('bitRate' in videoParam) || typeof videoParam.bitRate !== 'number') {\r\n        logger.error(\"No bitRate or invalid bitRate in videoParam!\");\r\n        return;\r\n      }\r\n\r\n      // 保存视频参数\r\n      this.setVideoParam(deviceId, videoParam);\r\n    }\r\n\r\n    protocolSender.sendPublishMediaReq(MediaOper.START_PUBLISH, MediaType.VIDEO, deviceId);\r\n    \r\n    // 发布响应（暂未实现）\r\n    // return promiseHandler(EventType.EVENT_START_PUB_VIDEO);\r\n  };\r\n\r\n  /**\r\n   * 停止广播视频\r\n   * @param {*} deviceId \r\n   */\r\n  @tracelog\r\n  stopPublishVideo(deviceId) {\r\n    protocolSender.sendPublishMediaReq(MediaOper.STOP_PUBLISH, MediaType.VIDEO, deviceId);\r\n\r\n    // 取消发布响应（暂未实现）\r\n    // return promiseHandler(EventType.EVENT_STOP_PUB_VIDEO);\r\n  };\r\n\r\n  /**\r\n   * 开始接收远端视频\r\n   * @param {*} userId \r\n   * @param {*} mediaId \r\n   */\r\n  @tracelog\r\n  startReceiveVideo(userId, mediaId) {\r\n    protocolSender.sendRecvMediaReq(\r\n      RecvState.START_RECV, \r\n      userId, \r\n      MediaType.VIDEO, \r\n      mediaId);\r\n\r\n    // 可能同时接收多个视频，保证请求和响应匹配\r\n    return promiseHandler(EventType.EVENT_START_RCV_MEDIA + getEventPostfix(userId, MediaType.VIDEO, mediaId));\r\n  };\r\n\r\n  /**\r\n   * 停止接收远端视频\r\n   * @param {*} userId \r\n   * @param {*} mediaId \r\n   */\r\n  @tracelog\r\n  stopReceiveVideo(userId, mediaId) {\r\n    protocolSender.sendRecvMediaReq(\r\n      RecvState.STOP_RECV, \r\n      userId, \r\n      MediaType.VIDEO, \r\n      mediaId);\r\n\r\n    return promiseHandler(EventType.EVENT_STOP_RCV_MEDIA + getEventPostfix(userId, MediaType.VIDEO, mediaId));\r\n  };\r\n}\r\n\r\nexport default new VideoManager();\r\n","import { MediaOper, MediaType, RecvState, EventType, PubEventType } from \"../../common/enums\"\r\nimport protocolSender from \"../util/protocol-sender\"\r\nimport { promiseHandler } from \"../../common/promise-handler\"\r\nimport { getEventPostfix, tracelog, getBitRate } from \"../../common/common\"\r\nimport mediaManager from \"./media-manager\"\r\nimport eventRegistry from \"../../common/event-registry\"\r\n\r\nclass ShareManager {\r\n  constructor() {\r\n    // Screen share media stream\r\n    this.screenShareStream = null;\r\n    this.screenShareStreamRefCount = 0;\r\n\r\n    // Make sure one screen share stream\r\n    this.isCreatingStream = false;\r\n\r\n    // User defined screen share parameters(init value is default)\r\n    this.screenShareParam = { frameRate: 15, width: 1920, height: 1080, bitRate: 0 };\r\n  }\r\n\r\n  /**\r\n   * 开始屏幕共享\r\n   * @param {*} shareParam { width: 640, height: 360, frameRate: 15, bitRate: 1000 }\r\n   */\r\n  @tracelog\r\n  startScreenShare(shareParam) {\r\n    if (shareParam) { \r\n      if (!('width' in shareParam) || typeof shareParam.width !== 'number') {\r\n        console.error(\"No width or invalid width in shareParam!\");\r\n        return;\r\n      }\r\n\r\n      if (!('height' in shareParam) || typeof shareParam.height !== 'number') {\r\n        console.error(\"No height or invalid height in shareParam!\");\r\n        return;\r\n      }\r\n      \r\n      if (!('frameRate' in shareParam) || typeof shareParam.frameRate !== 'number') {\r\n        console.error(\"No frameRate or invaid frameRate in shareParam!\");\r\n        return;\r\n      }\r\n      \r\n      if (!('bitRate' in shareParam) || typeof shareParam.bitRate !== 'number') {\r\n        console.error(\"No bitRate or invalid bitRate in shareParam!\");\r\n        return;\r\n      }\r\n\r\n      // 保存参数\r\n      this.setScreenShareParam(shareParam);\r\n\r\n      console.log(\"Set screen share param: \", shareParam);\r\n    }\r\n\r\n    protocolSender.sendPublishMediaReq(\r\n      MediaOper.START_PUBLISH, \r\n      MediaType.SCREEN_SHARE, \r\n      \"0\");\r\n  };\r\n\r\n  /**\r\n   * 停止屏幕共享\r\n   */\r\n  stopScreenShare() {\r\n    protocolSender.sendPublishMediaReq(\r\n      MediaOper.STOP_PUBLISH, \r\n      MediaType.SCREEN_SHARE, \r\n      \"0\");\r\n  };\r\n\r\n  /**\r\n   * 开始接受远端屏幕共享\r\n   * @param {*} userId \r\n   * @param {*} mediaId \r\n   */\r\n  startReceiveScreenShare(userId, mediaId) {\r\n    protocolSender.sendRecvMediaReq(\r\n      RecvState.START_RECV, \r\n      userId, \r\n      MediaType.SCREEN_SHARE, \r\n      mediaId);\r\n\r\n    // 可能同时接收多个共享，保证请求和响应匹配\r\n    return promiseHandler(EventType.EVENT_START_RCV_MEDIA + getEventPostfix(userId, MediaType.SCREEN_SHARE, mediaId));\r\n  };\r\n\r\n  /**\r\n   * 停止接收远端屏幕共享\r\n   * @param {*} srcUserId \r\n   * @param {*} mediaId \r\n   */\r\n  stopReceiveScreenShare(srcUserId, mediaId) {\r\n    protocolSender.sendRecvMediaReq(\r\n      RecvState.STOP_RECV, \r\n      srcUserId, MediaType.SCREEN_SHARE, \r\n      mediaId);\r\n\r\n    return promiseHandler(EventType.EVENT_STOP_RCV_MEDIA + getEventPostfix(userId, MediaType.SCREEN_SHARE, mediaId));\r\n  };\r\n}\r\n\r\nexport default new ShareManager();","import { getCtrlPoint, stringToColor } from '../../common/common'\r\nconst draw = {\r\n  // 直线\r\n  line: (canv, obj, ratio) => {\r\n    canv.beginPath();\r\n    canv.lineCap = \"round\"; // 线型\r\n    canv.lineWidth = obj.brush_size * ratio; // 线宽\r\n    canv.strokeStyle = stringToColor(obj.color); // 线颜色\r\n\r\n    canv.moveTo(obj.x1 * ratio, obj.y1 * ratio)\r\n    canv.lineTo(obj.x2 * ratio, obj.y2 * ratio)\r\n\r\n    canv.stroke();\r\n    canv.closePath();\r\n  },\r\n  // 曲线\r\n  curve: (canv, obj, ratio) => {\r\n    canv.beginPath();\r\n    canv.lineCap = \"round\"; // 线型\r\n    canv.lineWidth = obj.brush_size * ratio; // 线宽\r\n    canv.strokeStyle = stringToColor(obj.color); // 线颜色\r\n    const points = obj.points.map((item) => {\r\n      return {\r\n        X: item[0] * ratio,\r\n        Y: item[1] * ratio\r\n      }\r\n    })\r\n    if (obj.brush_size > 4) {\r\n      canv.moveTo(points[0].X, points[0].Y);\r\n      for (let i = 1; i < points.length; i++) {\r\n        let ctrlP = getCtrlPoint(points, i - 1)\r\n        canv.bezierCurveTo(ctrlP.pA.x, ctrlP.pA.y, ctrlP.pB.x, ctrlP.pB.y, points[i].X, points[i].Y)\r\n      }\r\n    } else {\r\n      for (let i = 1; i < points.length; i++) {\r\n        canv.lineTo(points[i].X, points[i].Y)\r\n      }\r\n    }\r\n    canv.stroke()\r\n    canv.closePath()\r\n  },\r\n  // 文字\r\n  text: (canv, obj, ratio) => {\r\n    canv.beginPath();\r\n    canv.font = `${obj.fontsize * 4 / 3 * ratio}px \"${obj.color}\"`;\r\n    canv.textBaseline = \"top\";\r\n    canv.fillStyle = stringToColor(obj.color);\r\n    var indexLine = 0;\r\n    for (var txt of obj.text.split('\\r\\n')) {\r\n      canv.fillText(txt, obj.left * ratio, (indexLine * 22) + obj.top * ratio);\r\n      indexLine++;\r\n    }\r\n    canv.closePath();\r\n  },\r\n  // 矩形\r\n  rectangle: (canv, obj, ratio) => {\r\n    canv.beginPath()\r\n    canv.lineWidth = obj.brush_size * ratio // 线宽\r\n    canv.strokeStyle = obj.color // 线颜色\r\n\r\n    let x1 = parseInt(obj.x1) * ratio;\r\n    let y1 = parseInt(obj.y1) * ratio;\r\n    let x2 = parseInt(obj.x2) * ratio;\r\n    let y2 = parseInt(obj.y2) * ratio;\r\n\r\n    canv.rect(x1, y1, (x2 - x1), (y2 - y1));\r\n    canv.closePath();\r\n    canv.stroke();\r\n  }\r\n}\r\n\r\nexport default draw","\r\nimport { Graphics } from \"../../common/enums\"\r\n\r\n\r\n/**\r\n * 白板数据\r\n */\r\nclass PageStore {\r\n  constructor(data) {\r\n    /**\r\n     * 全量数据存储\r\n     * boardData : {\r\n     *     seq_id: '' // 暂时不清楚作用\r\n     *     board_name: 'xxx',\r\n     *     board_type: 'xxx',\r\n     *     \"width\":1280,\r\n     *     \"height\":720,\r\n     *     \"page\":10,\r\n     *     \"current_pid\":2,\r\n     *     \"file_path\":,\r\n     *     \"convert_file_path\",\r\n     *     paintMap:   // map key: 页码 value: [obj]  图元对象\r\n     * }\r\n     */\r\n    this.boardData = { paintMap: new Map() }\r\n    this._init(data)\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   * @param {*} data \r\n   */\r\n  _init(data) {\r\n    // 第一个元素是白板属性数据\r\n    let pageData = data.slice(0, 1)\r\n\r\n    // 后面的元素是白板图元数据\r\n    let paintObjs = data.slice(1)\r\n\r\n    // 保存白板属性数据\r\n    this.boardData = Object.assign(this.boardData, pageData[0].board)\r\n\r\n    // 解析所有白板图元\r\n    if (paintObjs.length > 0) {\r\n      paintObjs.map((item) => {\r\n        let items = this.boardData.paintMap.get(item[item.type].pid)\r\n        if (!items) {\r\n          this.boardData.paintMap.set(item[item.type].pid, [item])\r\n          return\r\n        }\r\n        items.push(item)\r\n        this.boardData.paintMap.set(item[item.type].pid, items)\r\n      })\r\n    } else {\r\n      this.boardData.paintMap.set(pageData[0].board.current_pid, [])\r\n    }\r\n  }\r\n  clearPaints () {\r\n    this.boardData.paintMap = new Map()\r\n    this.boardData.paintMap.set(this.getCurPage(), [])\r\n  }\r\n\r\n  /**\r\n   * 获取当前显示第几页\r\n   */\r\n  getCurPage () {\r\n    return this.boardData.current_pid\r\n  }\r\n\r\n  /**\r\n   * 获取白板总页数\r\n   */\r\n  getPageCount() {\r\n    return this.boardData.page;\r\n  }\r\n\r\n  /**\r\n   * TODO：？？？\r\n   */\r\n  getFilePath() {\r\n    return this.boardData.file_path;\r\n  }\r\n\r\n  /**\r\n   * 获取白板图片URL前半部分：convert_file_path/xxx.jgp\r\n   */\r\n  getConvertFilePath() {\r\n    return this.boardData.convert_file_path;\r\n  }\r\n\r\n  /**\r\n   * 设置当前显示的页码\r\n   * @param {*} pid \r\n   */\r\n  setCurPage (pid) {\r\n    this.boardData.current_pid = pid\r\n  }\r\n\r\n  /**\r\n   * 获取白板名称\r\n   */\r\n  getBoardName() {\r\n    return this.boardData.board_name;\r\n  }\r\n\r\n  /**\r\n   * 删除白板页\r\n   * @param {*} item \r\n   */\r\n  deletePage (item) {\r\n    let items = this.boardData.paintMap.get(item[item.type].pid)\r\n    if (items) {\r\n      this.boardData.paintMap.set(item[item.type].pid, [])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取白板页上的所有图元\r\n   * @param {*} pid \r\n   */\r\n  findPagePaints(pid) {\r\n    if (!this.boardData.paintMap.get(pid)) {\r\n      this.boardData.paintMap.set(pid, [])\r\n    }\r\n    return this.boardData.paintMap.get(pid)\r\n  }\r\n\r\n  /**\r\n   * 根据gid查找图元数据\r\n   * @param {*} pageData \r\n   * @param {*} gid \r\n   */\r\n  findPaintByGid (pageData, gid) {\r\n    for (var i = 0; i < pageData.length; i++) {\r\n      let data = pageData[i]\r\n      // 判断ObjId是否相等\r\n      if (data[data.type].gid === gid) {\r\n        // 替换全量对应ID的Obj\r\n        return data\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * 删除图元\r\n   * @param {*} pageData 页图元数据组\r\n   * @param {*} paintObj\r\n   */\r\n  deletePaintObj(pageData, gid) {\r\n    for (var i = 0; i < pageData.length; i++) {\r\n      let data = pageData[i]\r\n      // 判断ObjId是否相等\r\n      if (data[data.type].gid === gid) {\r\n        // 替换全量对应ID的Obj\r\n        pageData.splice(i, 1)\r\n        console.log('===>', pageData)\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加图元\r\n   * @param {*} pageData \r\n   * @param {*} paintObj \r\n   */\r\n  addPaintObj (pageData, paintObj) {\r\n    pageData.push(paintObj)\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {*} pageData \r\n   * @param {*} paintObj \r\n   */\r\n  amendPaintObj(pageData, paintObj) {\r\n    for (var i = 0; i < pageData.length; i++) {\r\n      let data = pageData[i]\r\n      // 判断ObjId是否相等\r\n      if (data[data.type].gid === paintObj[paintObj.type].gid) {\r\n        // 替换全量对应ID的Obj\r\n        if (data.type === Graphics.CURVE) {\r\n          data[data.type].points.push(...paintObj[paintObj.type].points)\r\n        } else {\r\n          pageData.splice(i, 1, paintObj)\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 移动图元\r\n   * @param {*} pageData \r\n   * @param {*} gid \r\n   * @param {*} paintObj \r\n   */\r\n  movePaintObj(pageData, gid, paintObj) {\r\n    for (var i = 0; i < pageData.length; i++) {\r\n      let data = pageData[i]\r\n      // 判断ObjId是否相等\r\n      if (data[data.type].gid === gid) {\r\n        // 替换全量对应ID的Obj\r\n        if (data.type === Graphics.CURVE) {\r\n          data[data.type].points = data[data.type].points.map((item) => {\r\n            return (item = [item[0] + paintObj.ox, item[1] + paintObj.oy])\r\n          })\r\n        } else if (data.type === Graphics.TEXT) {\r\n          data[data.type].left += paintObj.ox\r\n          data[data.type].top += paintObj.oy\r\n        } else {\r\n          data[data.type].x1 += paintObj.ox\r\n          data[data.type].y1 += paintObj.oy\r\n          data[data.type].x2 += paintObj.ox\r\n          data[data.type].y2 += paintObj.oy\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default PageStore;","\r\nimport HstWebSocket from '../util/websocket'\r\nimport protocolSender from \"../util/protocol-sender\"\r\nimport { MediaType, DisplayMode, Graphics } from \"../../common/enums\"\r\nimport MsgDispatcher from '../util/msg-dispatcher'\r\nimport { asyncWrapper, tracelog } from '../../common/common'\r\nimport logger from '../../common/logger'\r\nimport eventRegistry from '../../common/event-registry'\r\nimport draw from \"../util/draw\"\r\nimport { preloadImage } from \"../../common/common\"\r\nimport PageStore from \"./page-store\"\r\nimport boardManager from \"./white-board-manager\"\r\n\r\n/**\r\n * 只读的白板对象（仅接收白板数据）\r\n */\r\nclass ReadOnlyWhiteboard {\r\n  constructor(params) {\r\n    this.isClosing = false;\r\n\r\n    // 页数据存储\r\n    this.pageStore = null;\r\n\r\n    // 是否是第一次获取全量数据\r\n    this.firstFullData = true;\r\n\r\n    // 缩放比例\r\n    this.scaleRatio = 1;\r\n\r\n    // 白板的原始宽高\r\n    this.width = 0;\r\n    this.height = 0;\r\n\r\n    // Canvas父标签的CSS样式大小\r\n    this.parentWidth = 0;\r\n    this.parentHeight = 0;\r\n\r\n    // Canvas\r\n    this.canvasEle = null;\r\n    this.canvasCtx = null;\r\n    this.canvasSizeChangeCallback = null;\r\n\r\n    // Canvas的CSS样式大小和位置\r\n    this.canvasLeft = 0;\r\n    this.canvasTop = 0;\r\n    this.canvasWidth = 0;\r\n    this.canvasHeight = 0;\r\n\r\n    // 缓存全量数据\r\n    this.sourcePaints = [];\r\n\r\n    // 服务器发送的消息序列号\r\n    this.msg_seq_id = null;\r\n\r\n    // 显示模式和参数\r\n    this.displayMode = DisplayMode.DBWZ;\r\n    this.displayParam = null;\r\n\r\n    // 保存构建参数\r\n    this.userId = params.userId;\r\n    this.mediaId = params.mediaId;\r\n    this.streamId = params.streamId;\r\n    this.streamToken = params.streamToken;\r\n    this.streamServer = params.streamServer\r\n\r\n    // 注册媒体服务事件\r\n    this.msgDispatcher = new MsgDispatcher();\r\n    this.msgDispatcher.addMsgHandler(31000, this._dealAmendData.bind(this)) // 直线\r\n    this.msgDispatcher.addMsgHandler(31002, this._dealAmendData.bind(this)) // 曲线\r\n    this.msgDispatcher.addMsgHandler(31006, this._dealAmendData.bind(this)) // 文字\r\n    this.msgDispatcher.addMsgHandler(31110, this._pageChangeHandle.bind(this)) // 切页\r\n    this.msgDispatcher.addMsgHandler(31112, this._moveGraph.bind(this)) // 移动\r\n    this.msgDispatcher.addMsgHandler(30000, this._heartBeat.bind(this))\r\n    this.msgDispatcher.addMsgHandler(30004, this._dealFullData.bind(this))\r\n    this.msgDispatcher.addMsgHandler(19005, this._processLoginResp.bind(this));\r\n\r\n    // 创建WebSocket连接\r\n    this.websocket = new HstWebSocket({\r\n      addrUrl: [this.streamServer],\r\n      handler: this.msgDispatcher,\r\n      opened: this._onWebsocketOpen.bind(this),\r\n      closed: this._onWebsocketClosed.bind(this),\r\n      error: this._onWebsocketError.bind(this)\r\n    });\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * 登录接收通道响应\r\n   * @param {*} msg \r\n   */\r\n  @tracelog\r\n  _processLoginResp(msg) {\r\n    if (msg.result != 0) {\r\n      logger.warn(\"Login white board receive channel failed!\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * WebSocket建立成功\r\n   */\r\n  @tracelog\r\n  _onWebsocketOpen() {\r\n    protocolSender.sendLoginRecvChannelReq(this.websocket, {\r\n      mediaType: MediaType.WHITE_BOARD,\r\n      mediaId: \"\",\r\n      streamId: this.streamId,\r\n      streamToken: this.streamToken\r\n    });\r\n  }\r\n\r\n  /**\r\n   * WebSocekt关闭\r\n   */\r\n  @tracelog\r\n  _onWebsocketClosed() {\r\n    if (!this.isClosing) {\r\n      asyncWrapper(()=>{eventRegistry.trigger(\"restoreWhiteBoard\", {\r\n        userId: this.userId,\r\n        mediaId: this.mediaId,\r\n        parentEle: this.parentEle,\r\n        displayMode: this.displayMode,\r\n        displayParam: this.displayParam})\r\n      })\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * WebSocket错误\r\n   */\r\n  @tracelog\r\n  _onWebsocketError() {\r\n  }\r\n\r\n  /**\r\n   * 设置显示模式\r\n   * @param {*} mode \r\n   * @param {*} param \r\n   */\r\n  setDisplayMode(mode, param) {\r\n    if (this.displayMode != mode // 显示模式改变\r\n      || (mode == DisplayMode.DBSF && param && this.displayParam != param)) { // 等比缩放参数改变\r\n      this.displayMode = mode;\r\n      this.displayParam = param;\r\n      this._showWhiteBoard();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 等比完整显示\r\n   */\r\n  @tracelog\r\n  _showWhiteBoardDbwz() {\r\n    // 计算宽高比\r\n    let showRatio = this.parentHeight / this.parentWidth.toFixed(6);\r\n    let dataRatio =  this.height / this.width.toFixed(6);\r\n\r\n    // 显示窗口比数据窗口显得更加修长，则基于宽度进行缩放\r\n    if (showRatio > dataRatio ) {\r\n      // 设置Canvas宽高\r\n      this.canvasWidth = this.parentWidth;\r\n      this.canvasHeight = this.height * this.parentWidth / this.width.toFixed(6);\r\n\r\n      // 设置Canvas位置\r\n      this.canvasLeft = 0;\r\n      this.canvasTop = (this.parentHeight - this.canvasHeight) / 2\r\n    } else { // 显示窗口比数据窗口显得更加扁平，则基于高度进行缩放\r\n      // 设置Canvas宽高\r\n      this.canvasWidth = this.width * this.parentHeight / this.height.toFixed(6);\r\n      this.canvasHeight = this.parentHeight;\r\n\r\n      // 设置Canvas位置\r\n      this.canvasLeft = (this.parentWidth - this.canvasWidth) / 2;\r\n      this.canvasTop = 0;\r\n    }\r\n\r\n    // 通知上层应用调整Canvas宽高\r\n    this.canvasSizeChangeCallback(\r\n      this.canvasLeft,\r\n      this.canvasTop,\r\n      this.canvasWidth, \r\n      this.canvasHeight)\r\n\r\n    // 更新缩放比例，供显示的时候使用\r\n    this.scaleRatio = this.canvasHeight / this.height.toFixed(6);\r\n    this.canvasEle.width = this.canvasWidth\r\n    this.canvasEle.height = this.canvasHeight\r\n\r\n    this._refreshRender();\r\n  }\r\n\r\n  /**\r\n   * 等比适应显示\r\n   */\r\n  _showWhiteBoardDbsy() {\r\n    // 计算宽高比\r\n    let showRatio = this.parentHeight / this.parentWidth.toFixed(6);\r\n    let dataRatio =  this.height / this.width.toFixed(6);\r\n\r\n    // 显示窗口比数据窗口显得更加修长，则基于高度进行缩放\r\n    if (showRatio > dataRatio ) {\r\n      // 设置Canvas宽高\r\n      this.canvasWidth = this.width * this.parentHeight / this.height.toFixed(6);\r\n      this.canvasHeight = this.parentHeight;\r\n\r\n      // 设置Canvas位置\r\n      this.canvasLeft = 0;\r\n      this.canvasTop = 0;\r\n    } else { // 显示窗口比数据窗口显得更加扁平，则基于宽度进行缩放\r\n      // 设置Canvas宽高\r\n      this.canvasWidth = this.parentWidth;\r\n      this.canvasHeight = this.height * this.parentWidth / this.width.toFixed(6);\r\n\r\n      // 设置Canvas位置\r\n      this.canvasLeft = 0;\r\n      this.canvasTop = 0;\r\n    }\r\n\r\n    // 通知上层应用调整Canvas宽高\r\n    this.canvasSizeChangeCallback(\r\n      this.canvasLeft,\r\n      this.canvasTop,\r\n      this.canvasWidth, \r\n      this.canvasHeight)\r\n\r\n    // 更新缩放比例，供显示的时候使用\r\n    this.scaleRatio = this.canvasHeight / this.height.toFixed(6);\r\n\r\n    // 更新Canvas宽高\r\n    this.canvasEle.width = this.canvasWidth\r\n    this.canvasEle.height = this.canvasHeight\r\n\r\n    this._refreshRender();\r\n  }\r\n\r\n  /**\r\n   * 等比缩放显示\r\n   */\r\n  _showWhiteBoardDbsf() {\r\n    // 设置Canvas宽高\r\n    this.canvasWidth = this.width * this.displayParam.toFixed(6) / 100;\r\n    this.canvasHeight = this.height * this.displayParam.toFixed(6) / 100;\r\n\r\n    // 设置Canvas位置\r\n    if (this.canvasWidth >= this.parentWidth) {\r\n      this.canvasLeft = 0;\r\n      // this.parentEle.style.overflowX = 'scroll';\r\n    } else {\r\n      this.canvasLeft = (this.parentWidth - this.canvasWidth) / 2;\r\n      // this.parentEle.style.overflowX = 'hidden';\r\n    }\r\n    \r\n    if (this.canvasHeight >= this.parentHeight) {\r\n      this.canvasTop = 0;\r\n      // this.parentEle.style.overflowY = 'scroll';\r\n    } else {\r\n      this.canvasTop = (this.parentHeight - this.canvasHeight) / 2;\r\n      // this.parentEle.style.overflowY = 'hidden';\r\n    }\r\n\r\n    // 通知上层应用调整Canvas宽高\r\n    this.canvasSizeChangeCallback(\r\n      this.canvasLeft,\r\n      this.canvasTop,\r\n      this.canvasWidth, \r\n      this.canvasHeight)\r\n\r\n    // 更新缩放比例\r\n    this.scaleRatio = this.displayParam.toFixed(6) / 100;\r\n\r\n    // 更新Canvas宽高\r\n    this.canvasEle.width = this.canvasWidth\r\n    this.canvasEle.height = this.canvasHeight\r\n\r\n    this._refreshRender();\r\n  }\r\n\r\n  /**\r\n   * 渲染白板\r\n   */\r\n  _showWhiteBoard() {\r\n    if (!this.canvasEle || !this.canvasCtx) {\r\n      console.warn(\"Invalid canvas render!\")\r\n      return;\r\n    }\r\n\r\n    // 绘制图形\r\n    if (this.displayMode == DisplayMode.DBWZ) {\r\n      this._showWhiteBoardDbwz();\r\n    } else if (this.displayMode == DisplayMode.DBSY) {\r\n      this._showWhiteBoardDbsy();\r\n    } else if (this.displayMode == DisplayMode.DBSF) {\r\n      this._showWhiteBoardDbsf();\r\n    } else {\r\n      logger.error(\"Unknown display mode: \" + this.displayMode);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置Canvas父节点\r\n   * @param {*} parentEle \r\n   */\r\n  @tracelog\r\n  setRenderElement(renderEle, params) {\r\n    logger.log(\"Set render element: \" + JSON.stringify(params));\r\n    if (renderEle) {\r\n      this.canvasEle = renderEle;\r\n\r\n      // this.canvasEle.width = this.width\r\n      // this.canvasEle.height = this.height\r\n\r\n      this.parentWidth = params.parentWidth;\r\n      this.parentHeight = params.parentHeight;\r\n\r\n      this.canvasSizeChangeCallback = params.canvasSizeChange;\r\n\r\n      // 获取Canvas上下文\r\n      this.canvasCtx = this.canvasEle.getContext('2d');\r\n\r\n      // 设置父节点后立即显示\r\n      this._showWhiteBoard();\r\n    } else {\r\n      // 清除画布图元\r\n      this._emptyCanvas();\r\n\r\n      // 移除Canvas节点\r\n      if (this.canvasEle) {\r\n        this.canvasEle.width = 0\r\n        this.canvasEle.height = 0\r\n        this.canvasCtx = null;\r\n        this.canvasEle = null;\r\n      }\r\n    \r\n      this.canvasSizeChangeCallback = null;\r\n\r\n      this.parentWidth = 0;\r\n      this.parentHeight = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 初始化canvas画板\r\n   * @param {*} boardInfo \r\n   */\r\n  _initCanvas (boardInfo) {\r\n    // 保存白板原始大小\r\n    this.width = boardInfo.width\r\n    this.height = boardInfo.height\r\n\r\n    // 获取图片URL\r\n    boardManager._getFileUrl(boardInfo.convert_file_path, boardInfo.page)\r\n    \r\n    // 重绘Render\r\n    this._refreshRender()\r\n  }\r\n\r\n  /**\r\n   * 清除画板\r\n   */\r\n  _emptyCanvas() {\r\n    if (this.canvasCtx) {\r\n      this.canvasCtx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 等待从服务器获取图片URL\r\n   */\r\n  _waitGetImageUrl() {\r\n    const convertPath = this.pageStore.getConvertFilePath()\r\n    return new Promise(function(resolve, reject) {\r\n      let count = 0\r\n      let handle = setInterval(() => {\r\n        ++count\r\n        if (boardManager.cacheFileUrlMap.get(convertPath)) {\r\n          clearInterval(handle)\r\n          resolve()\r\n        } else {\r\n          if (count > 10) { // 最多等待5秒\r\n            clearInterval(handle)\r\n            reject(\"等待获取图片URL失败\")\r\n          }\r\n        }\r\n      }, 500)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 插入背景图片\r\n   */\r\n  _drawImage() {\r\n    let self = this\r\n    const convertPath = this.pageStore.getConvertFilePath()\r\n    const curPage = this.pageStore.getCurPage()\r\n    const fullPath = `${convertPath}/${curPage}.jpg`\r\n\r\n    return new Promise(function(resolve, reject) {\r\n      let imgUrl = boardManager.cacheFileUrlMap.get(convertPath).get(fullPath)\r\n      wx.getImageInfo({\r\n        src: imgUrl,\r\n        success: function(res) {\r\n          if (self.canvasEle) {\r\n            let seal = self.canvasEle.createImage();\r\n            seal.onload = function() {\r\n              logger.log(\"加载图片成功\")\r\n              if (self.canvasCtx) {\r\n                self.canvasCtx.drawImage(\r\n                  seal, \r\n                  0, \r\n                  0, \r\n                  self.canvasWidth, \r\n                  self.canvasHeight);\r\n              }\r\n              resolve()\r\n            }\r\n            seal.onerror = function(res) {\r\n              console.error(\"加载图片失败\", res)\r\n              reject()\r\n            }\r\n            seal.src = res.path;\r\n          } \r\n        },\r\n        fail: function(res) {\r\n          logger.warn(\"Get image info failed!\")\r\n          reject()\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 重绘render，需要保证背景图片比图元先绘制\r\n   */\r\n  _refreshRender() {\r\n    let self = this\r\n    self._emptyCanvas()\r\n    if (self.pageStore.getFilePath()) {\r\n      self._waitGetImageUrl().then(()=>{\r\n        logger.log(\"Image url is ready.\")\r\n        self._drawImage().then(()=>{\r\n          logger.log(\"Draw image finished.\")\r\n          self._drawAllPaint()\r\n        }).catch(()=>{\r\n          logger.log(\"Draw image failed!\")\r\n        })\r\n      }).catch((err)=>{\r\n        logger.warn(err)\r\n      })\r\n    } else {\r\n      logger.log(\"无需绘制背景图片\")\r\n      self._drawAllPaint()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 根据图形绘图\r\n   * @param {*} type \r\n   * @param {*} obj \r\n   */\r\n  _drawPaint (type, obj) {\r\n    if (this.canvasCtx) {\r\n      try {\r\n        draw[type](this.canvasCtx, obj, this.scaleRatio)\r\n      } catch (err) {\r\n        logger.error(\"Draw type: \" + type + \", error: \" + err);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 全量重新绘图\r\n   */\r\n  _drawAllPaint() {\r\n    if (this.pageStore) {\r\n      let paintObjs = this.pageStore.findPagePaints(this.pageStore.getCurPage())\r\n      paintObjs.map((item) => {\r\n        this._drawPaint(item.type, item[item.type])\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 增量绘图\r\n   * @param {*} pageData \r\n   * @param {*} paintObj \r\n   */\r\n  _drawAmendData (pageData, paintObj) {\r\n    if (paintObj.type !== Graphics.CURVE) {\r\n      this._emptyCanvas()\r\n      this._drawAllPaint()\r\n    } else { // 只需绘制修改图元\r\n      const paint = this.pageStore.findPaintByGid(pageData, paintObj[paintObj.type].gid)\r\n      if (paint) {\r\n        this._drawPaint(paint.type, paint[paint.type])\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 修改/删除/新增 图元\r\n   * @param {*} paintObj \r\n   */\r\n  _dealAmendData (paintObj) {\r\n    this._checkMsgSeq(paintObj);\r\n\r\n    let pageData = this.pageStore.findPagePaints(this.pageStore.getCurPage())\r\n    if (paintObj[paintObj.type].action === 1) { // 添加\r\n      this.pageStore.addPaintObj(pageData, paintObj)\r\n      this._drawAmendData(pageData, paintObj)\r\n    } else if (paintObj[paintObj.type].action === 2) { // 修改\r\n      this.pageStore.amendPaintObj(pageData, paintObj)\r\n      this._drawAmendData(pageData, paintObj)\r\n    } else if (paintObj[paintObj.type].action === 3) { // 删除\r\n      this.pageStore.deletePaintObj(pageData, paintObj[paintObj.type].gid)\r\n      this._drawAllPaint()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 页变化\r\n   * @param {*} pageObj \r\n   */\r\n  _pageChangeHandle (pageObj) {\r\n    this._checkMsgSeq(pageObj);\r\n\r\n    let pageItem = pageObj[pageObj.type]\r\n    if (pageItem.action === 0) { // 切换页\r\n      this.pageStore.setCurPage(pageItem.pid)\r\n      this._refreshRender()\r\n      // 通知白板页切换\r\n      eventRegistry.trigger(\"onWhiteBoardCurPageChanged\", {\r\n        mediaId: this.mediaId, \r\n        curPage: this.pageStore.getCurPage()\r\n      })\r\n    } else if (pageItem.action === 1) { // 添加页\r\n      this.pageStore.addPage(pageItem)\r\n    } else if (pageItem.action === 2) { // 删除页\r\n      this.pageStore.deletePage(pageItem)\r\n    } else if (pageItem.action === 3) { // 清空图元\r\n      this._emptyCanvas()\r\n      this.pageStore.clearPaints()\r\n    } else { // 清空图元\r\n      logger.warn(\"Unexpected action: \" + pageItem.action);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 移动图元\r\n   * @param {*} paintObj \r\n   */\r\n  _moveGraph (paintObj) {\r\n    this._checkMsgSeq(paintObj);\r\n\r\n    let pageData = this.pageStore.findPagePaints(paintObj.gmov.pid)\r\n    paintObj.gmov.graphs.map((gid) => {\r\n      this.pageStore.movePaintObj(pageData, gid, paintObj.gmov)\r\n    })\r\n    this._drawAllPaint()\r\n  }\r\n\r\n  /**\r\n   * 关闭白板\r\n   */\r\n  @tracelog\r\n  close() {\r\n    this.isClosing = true;\r\n\r\n    this.pageStore = null;\r\n    this.msgDispatcher = null;\r\n\r\n    boardManager.removeWhiteBoard(this.mediaId);\r\n\r\n    if (this.intervalHandle) {\r\n      clearInterval(this.intervalHandle);\r\n      this.intervalHandle = null;\r\n    }\r\n\r\n    if (this.parentEle && this.canvasEle) {\r\n      this.parentEle.removeChild(this.canvasEle);\r\n      //this.parentEle = null;\r\n      this.canvasEle = null;\r\n    }\r\n\r\n    if (this.websocket) {\r\n      this.websocket.close();\r\n      this.websocket = null;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 处理全量数据\r\n   * @param {*} msg \r\n   */\r\n  _dealFullData(msg) {\r\n    // 有可能会有多个消息，先缓存\r\n    this.sourcePaints = this.sourcePaints.concat(msg.data)\r\n    // 全量数据同步完成\r\n    if (msg.sync_end) {\r\n      logger.log(\"Get white board full data complete.\");\r\n      this.pageStore = new PageStore(this.sourcePaints)\r\n\r\n      if (this.sourcePaints[0].board) {\r\n        this._initCanvas(this.sourcePaints[0].board)\r\n      } else {\r\n        logger.error(\"Invalid source paints: \" + JSON.stringify(this.sourcePaints));\r\n        this.sourcePaints = [];\r\n        return;\r\n      }\r\n\r\n      // 通知上层开始渲染\r\n      if (this.firstFullData) {\r\n        if (!boardManager.tryRestoreWhiteBoardRender(this.mediaId)) {\r\n          eventRegistry.trigger(\"onRemoteMediaAdd\", { \r\n            userId: null, \r\n            mediaType: MediaType.WHITE_BOARD, \r\n            mediaId: this.mediaId,\r\n            mediaName: this.pageStore.getBoardName(),\r\n            totalPage: this.pageStore.getPageCount(),\r\n            curPage: this.pageStore.getCurPage()\r\n          });\r\n        }\r\n        this.firstFullData = false;\r\n      }\r\n\r\n      this.sourcePaints = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检查是否有丢消息，如果消息序列号异常，需要重新拉取全量数据\r\n   * @param {*} msg \r\n   */\r\n  _checkMsgSeq(msg) {\r\n    if (!this.msg_seq_id // 第一次收到心跳\r\n      || (this.msg_seq_id !== null && msg.seq_id - this.msg_seq_id !== 1)) { // 序列号不连续\r\n      protocolSender.sendGetWhiteBoardFullDataReq(this.websocket);\r\n    }\r\n    this.msg_seq_id = msg.seq_id;\r\n  }\r\n\r\n  /**\r\n   * 心跳\r\n   * @param {*} msg \r\n   */\r\n  _heartBeat (msg) {\r\n    this._checkMsgSeq(msg);\r\n  }\r\n}\r\n\r\nexport default ReadOnlyWhiteboard","\r\nimport Store from \"../util/store\"\r\nimport protocolSender from \"../util/protocol-sender\"\r\nimport { MediaType, MediaOper, EventType, RecvState, DisplayMode, EventResult } from \"../../common/enums\"\r\nimport { tracelog, asyncWrapper } from '../../common/common'\r\nimport { promiseHandler } from \"../../common/promise-handler\"\r\nimport logger from '../../common/logger'\r\nimport { getEventPostfix } from '../../common/common'\r\nimport ReadOnlyWhiteboard from \"./readonly-white-board\"\r\nimport eventRegistry from \"../../common/event-registry\"\r\n\r\n/**\r\n * 管理所有白板对象\r\n */\r\nclass WhiteboardManager {\r\n  constructor() {\r\n    this._init();\r\n\r\n    // 注册信令服务事件\r\n    Store.msgDispatcher.addMsgHandler(19001, this._onCreateWhiteBoardRes.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(19003, this._onCloseWhiteBoardRes.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(20007, this._onGetWhiteBoardFileUrlRes.bind(this));\r\n\r\n    // 自动恢复白板\r\n    eventRegistry.on(\"restoreWhiteBoard\", this._onRestoreWhiteBoard.bind(this));\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 尝试恢复白板的渲染\r\n   * @param {*} mediaId\r\n   * @returns 是否找到白板 \r\n   */\r\n  @tracelog\r\n  tryRestoreWhiteBoardRender(mediaId) {\r\n    if (this.restoreWhiteBoards.length == 0) {\r\n      logger.log(\"Empty restore white boards.\")\r\n      return false;\r\n    }\r\n\r\n    let board = this.restoreWhiteBoards[0];\r\n    if (board.mediaId != mediaId) {\r\n      logger.log(\"Different white board.\");\r\n      return false;\r\n    }\r\n\r\n    this.setWhiteBoardRender(mediaId, board.parentEle);\r\n    this.setDisplayMode(mediaId, board.displayMode, board.displayParam);\r\n\r\n    this.restoreWhiteBoards.shift();\r\n    if (this.restoreWhiteBoards.length > 0) {\r\n      asyncWrapper(()=>{this._doStartReceiveWhiteBoard(this.restoreWhiteBoards[0])})\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 接收白板\r\n   * @param {*} mediaId \r\n   */\r\n  _doStartReceiveWhiteBoard(mediaId) {\r\n    this.startReceiveWhiteBoard(mediaId).then(()=>{\r\n      logger.log(\"Start receive white board success.\");\r\n    }).catch((e)=>{\r\n      logger.error(\"Start receive white board failed, err: \" + e);\r\n      this.restoreWhiteBoards.shift();\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 恢复白板事件处理\r\n   * @param {*} params \r\n   */\r\n  @tracelog\r\n  _onRestoreWhiteBoard(params) {\r\n    this.restoreWhiteBoards.push(params);\r\n    if (this.restoreWhiteBoards.length == 1) {\r\n      this._doStartReceiveWhiteBoard(params.mediaId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   */\r\n  _init() {\r\n    // 包含本地创建和接收远端的白板\r\n    this.whiteBoards = new Array();\r\n\r\n    // 全局显示模式和参数\r\n    this.displayMode = null;\r\n    this.displayParam = null;\r\n\r\n    // fileUrlMap\r\n    this.cacheFileUrlMap = new Map()\r\n\r\n    // 自动恢复白板\r\n    this.restoreWhiteBoards = new Array();\r\n  }\r\n\r\n  /**\r\n   * 创建白板\r\n   */\r\n  createWhiteBoard(params) {\r\n    protocolSender.sendCreateWhiteboardReq(params);\r\n    return promiseHandler(EventType.EVENT_CREATE_WHITE_BOARD);\r\n  }\r\n  \r\n  /**\r\n   * 创建白板响应\r\n   * @param {*} params \r\n   */\r\n  _onCreateWhiteBoardRes(params) {\r\n    eventRegistry.trigger(\r\n      EventType.EVENT_CREATE_WHITE_BOARD, \r\n      params.result == 0 ? EventResult.SUCCESS : EventResult.FAILED)\r\n  }\r\n\r\n  /**\r\n   * 关闭白板\r\n   * @param {*} mediaId \r\n   */\r\n  closeWhiteBoard(mediaId) {\r\n    if (!mediaId) {\r\n      console.error(\"Invalid mediaId!\");\r\n      return;\r\n    }\r\n\r\n    protocolSender.sendCloseWhiteboardReq(mediaId)\r\n    return promiseHandler(EventType.EVENT_CLOSE_WHITE_BOARD);\r\n  }\r\n\r\n  /**\r\n   * 关闭白板响应\r\n   * @param {*} params \r\n   */\r\n  _onCloseWhiteBoardRes(params) {\r\n    eventRegistry.trigger(\r\n      EventType.EVENT_CREATE_WHITE_BOARD, \r\n      params.result == 0 ? EventResult.SUCCESS : EventResult.FAILED)\r\n  }\r\n\r\n  /**\r\n   * 开始广播白板\r\n   * @param {*} mediaId \r\n   */\r\n  startPublishWhiteBoard(mediaId) {\r\n    protocolSender.sendPublishMediaReq(MediaOper.START_PUBLISH, MediaType.WHITE_BOARD, mediaId);\r\n    \r\n    // 发布响应（暂未实现）\r\n    // return promiseHandler(EventType.EVENT_START_PUB_WHITE_BOARD);\r\n  }\r\n\r\n  /**\r\n   * 停止广播白板\r\n   * @param {*} mediaId \r\n   */\r\n  stopPublishWhiteBoard(mediaId) {\r\n    protocolSender.sendPublishMediaReq(MediaOper.STOP_PUBLISH, MediaType.WHITE_BOARD, mediaId);\r\n    \r\n    // 发布响应（暂未实现）\r\n    // return promiseHandler(EventType.EVENT_STOP_PUB_WHITE_BOARD);\r\n  }\r\n\r\n  /**\r\n   * 开始接收白板\r\n   * @param {*} userId \r\n   * @param {*} mediaId \r\n   */\r\n  startReceiveWhiteBoard(userId, mediaId) {\r\n    protocolSender.sendRecvMediaReq(\r\n      RecvState.START_RECV, \r\n      userId, \r\n      MediaType.WHITE_BOARD, \r\n      mediaId);\r\n\r\n    // 可能同时接收多个视频，保证请求和响应匹配\r\n    return promiseHandler(EventType.EVENT_START_RCV_MEDIA + getEventPostfix(userId, MediaType.WHITE_BOARD, mediaId));\r\n  }\r\n\r\n  /**\r\n   * 停止接收白板\r\n   * @param {*} userId \r\n   * @param {*} mediaId \r\n   */\r\n  stopReceiveWhiteBoard(userId, mediaId) {\r\n    protocolSender.sendRecvMediaReq(\r\n      RecvState.STOP_RECV, \r\n      userId, \r\n      MediaType.WHITE_BOARD, \r\n      mediaId);\r\n\r\n    return promiseHandler(EventType.EVENT_STOP_RCV_MEDIA + getEventPostfix(userId, MediaType.WHITE_BOARD, mediaId));\r\n  }\r\n\r\n  /**\r\n   * 设置白板渲染器\r\n   * @param {*} mediaId \r\n   * @param {*} parentEle \r\n   */\r\n  setWhiteBoardRender(mediaId, renderEle, params) {\r\n    for (let board of this.whiteBoards) {\r\n      if (board.mediaId == mediaId) {\r\n        board.setRenderElement(renderEle, params);\r\n        return\r\n      }\r\n    }\r\n    logger.warn(\"Cannot find white board by mediaId: \" + mediaId)\r\n  }\r\n\r\n  /**\r\n   * 取消设置白板渲染器\r\n   * @param {*} userId \r\n   * @param {*} mediaId \r\n   */\r\n  unsetWhiteBoardRender(mediaId) {\r\n    for (let board of this.whiteBoards) {\r\n      if (board.mediaId == mediaId) {\r\n        board.setRenderElement(null, null);\r\n        return\r\n      }\r\n    }\r\n    logger.warn(\"Cannot find white board by mediaId: \" + mediaId)\r\n  }\r\n\r\n  /**\r\n   * 设置显示模式\r\n   * @param {*} mediaId \r\n   * @param {*} mode \r\n   * @param {*} param \r\n   */\r\n  @tracelog\r\n  setDisplayMode(mediaId, mode, param) {\r\n    if (mode != DisplayMode.DBWZ \r\n      && mode != DisplayMode.DBSY \r\n      && mode != DisplayMode.DBSF) {\r\n      logger.error(\"Invalid display mode: \" + mode);\r\n      return;\r\n    }\r\n\r\n    if (mode == DisplayMode.DBSF) { \r\n      if (!param) {\r\n        logger.error(\"setDisplayMode param is invalid!\");\r\n        return;\r\n      } else {\r\n        if (!Number.isInteger(param)) {\r\n          logger.error(\"setDisplayMode param should be integer!\");\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!mediaId) { // 全局设置\r\n      for (const board of this.whiteBoards) {\r\n        board.setDisplayMode(mode, param);\r\n      }\r\n      this.displayMode = mode;\r\n      this.displayParam = param;\r\n    } else { // 单独设置\r\n      let board = this._findWhiteBoard(mediaId);\r\n      if (board) {\r\n        board.setDisplayMode(mode, param);\r\n      } else {\r\n        logger.error(\"Cannot find white board \" + mediaId);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 收到开始接收白板的响应\r\n   * @param {*} params \r\n   */\r\n  onStartRecvWhiteBoardRes(params) {\r\n    if (this._findWhiteBoard(params.mediaId)) {\r\n      logger.error(\"White baord \" + params.mediaId + \"exists already!\");\r\n    } else {\r\n      let board = new ReadOnlyWhiteboard(params);\r\n      this.whiteBoards.push(board);\r\n      if (this.displayMode) { // 默认使用全局设置\r\n        board.setDisplayMode(this.displayMode, this.displayParam);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 收到停止接收白板的响应\r\n   * @param {*} params \r\n   */\r\n  onStopRecvWhiteBoardRes(params) {\r\n    let board = this._findWhiteBoard(params.mediaId);\r\n    if (board) {\r\n      for (let i = 0; i < this.whiteBoards.length; i++) {\r\n        if (this.whiteBoards[i].mediaId == params.mediaId) {\r\n          this.whiteBoards[i].close();\r\n          this.whiteBoards.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      logger.error(\"Cannot find White baord \" + params.mediaId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 重新初始化\r\n   */\r\n  reinitialize() {\r\n    for (const board of this.whiteBoards) {\r\n      board.close();\r\n    }\r\n    this._init();\r\n  }\r\n\r\n  /**\r\n   * 移除指定白板\r\n   * @param {*} mediaId \r\n   */\r\n  removeWhiteBoard(mediaId) {\r\n    this.whiteBoards.forEach(function(board, index, arr) {\r\n      if (board.mediaId == mediaId) {\r\n        arr.splice(index, 1);\r\n        return false;\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 查找白板\r\n   * @param {*} mediaId \r\n   */\r\n  _findWhiteBoard(mediaId) {\r\n    for (const board of this.whiteBoards) {\r\n      if (board.mediaId == mediaId) {\r\n        return board;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取白板图片响应\r\n   * @param {*} data \r\n   */\r\n  _onGetWhiteBoardFileUrlRes(data) {\r\n    let filePath = data.data.file_path\r\n    const rootPath = filePath.substr(0, filePath.lastIndexOf('/'))\r\n    let fileUrls = this.cacheFileUrlMap.get(rootPath) || new Map()\r\n    // 微信小程序只能访问https\r\n    let httpsUrl = data.data.url\r\n    if (data.data.url.search(\"https\") == -1) {\r\n      httpsUrl = data.data.url.replace(/^http/, \"https\")\r\n    }\r\n    fileUrls.set(data.data.file_path, httpsUrl)\r\n    this.cacheFileUrlMap.set(rootPath, fileUrls)\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {*} file_path \r\n   * @param {*} total \r\n   */\r\n  _getFileUrl (file_path, total) {\r\n    // 地址存储过 不用查询\r\n    if (!file_path) return\r\n    if (this.cacheFileUrlMap.get(file_path)) return\r\n    // 循环获取图片URL地址\r\n    for (let i = 0; i < total; i++) {\r\n      protocolSender.sendGetWhiteBoardFileUrlReq(`${file_path}/${i}.jpg`);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new WhiteboardManager();","import Store from '../util/store'\r\nimport { MediaType, MediaOper, EventResult, RecvState, EventType } from \"../../common/enums\"\r\nimport { asyncWrapper, getAddrs, getEventPostfix, tracelog, checkParam } from \"../../common/common\"\r\nimport logger from \"../../common/logger\"\r\nimport videoManager from \"./video-manager\"\r\nimport audioManager from \"./audio-manager\"\r\nimport shareManager from \"./share-manager\"\r\nimport whiteBoardManger from \"./white-board-manager\"\r\nimport eventRegistry from '../../common/event-registry'\r\n\r\n/**\r\n * 有些处理是多个媒体类型（音频、视频、屏幕共享、电子白板）所共有的\r\n */\r\nclass MediaManager {\r\n  constructor() {\r\n    // BindId : UpPeerConnection\r\n    this.upPcMap = new Map();\r\n\r\n    // BindId : DownPeerConnection\r\n    this.downPcMap = new Map();\r\n\r\n    // To be restored down tracks \r\n    this.restoreDownTracks = new Array();\r\n\r\n    // 订阅消息处理\r\n    Store.msgDispatcher.addMsgHandler(14106, this.onNotifyUserMediaState.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(14109, this.onNotifyGroupMediaStates.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(14110, this.onNotifyUserJoinGroup.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(14111, this.onNotifyUserLeaveGroup.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(18003, this.onRecvStreamRes.bind(this));\r\n\r\n    // 重新接收媒体\r\n    eventRegistry.on(\"restoreDownTrack\", this._onRestoreDownTrack.bind(this));\r\n  }\r\n\r\n  /**\r\n   * 恢复媒体渲染\r\n   * @param {*} params \r\n   * @returns 找到了track\r\n   */\r\n  @tracelog\r\n  tryRestoreMediaRender(params) {\r\n    if (this.restoreDownTracks.length == 0) {\r\n      logger.log(\"Empty restore tracks.\");\r\n      return false;\r\n    }\r\n\r\n    let track = this.restoreDownTracks[0];\r\n    if (params.userId !== track.userId\r\n      || params.mediaType !== track.mediaType\r\n      || params.mediaId !== track.mediaId) {\r\n      logger.log(\"Different track.\");\r\n      return false;\r\n    }\r\n\r\n    if (track.videoEle) {\r\n      this.setMediaRender(track.userId, track.mediaType, track.mediaId, track.videoEle);\r\n    }\r\n\r\n    this.restoreDownTracks.shift();\r\n    if (this.restoreDownTracks.length > 0) {\r\n      asyncWrapper(()=>{this._doStartReceiveMedia(this.restoreDownTracks[0])})\r\n    }\r\n      \r\n    return true;\r\n}\r\n\r\n  /**\r\n   * 接收媒体\r\n   * @param {*} params \r\n   */\r\n  _doStartReceiveMedia(params) {\r\n    this.startReceiveMedia(params.userId, params.mediaType, params.mediaId).then(()=>{\r\n      logger.log(\"Start receive media success.\");\r\n    }).catch((e)=>{\r\n      logger.error(\"Start receive media failed, err: \" + e);\r\n      this.restoreDownTracks.shift();\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 恢复接受媒体的事件处理\r\n   * @param {*} params \r\n   */\r\n  @tracelog\r\n  _onRestoreDownTrack(params) {\r\n    this.restoreDownTracks.push(params);\r\n    if (this.restoreDownTracks.length == 1) {\r\n      this._doStartReceiveMedia(params);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 开始广播本地媒体\r\n   * @param {*} mediaType \r\n   * @param {*} mediaId \r\n   * @param {*} params\r\n   * @returns 无\r\n   */\r\n  @tracelog\r\n  startPublishMedia(mediaType, mediaId, params) {\r\n    switch(mediaType) {\r\n      case MediaType.AUDIO:\r\n        audioManager.startPublishAudio(mediaId);\r\n        break;\r\n      case MediaType.VIDEO:\r\n        videoManager.startPublishVideo(mediaId, params);\r\n        break;\r\n      case MediaType.SCREEN_SHARE:\r\n        shareManager.startScreenShare(params);\r\n        break;\r\n      case MediaType.WHITE_BOARD:\r\n        whiteBoardManger.startPublishWhiteBoard(mediaId);\r\n        break;\r\n      default:\r\n        logger.error(\"Unknown media type: \" + mediaType);\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 停止广播本地媒体\r\n   * @param {*} mediaType \r\n   * @param {*} mediaId\r\n   * @returns 无 \r\n   */\r\n  @tracelog\r\n  stopPublishMedia(mediaType, mediaId) {\r\n    switch(mediaType) {\r\n      case MediaType.AUDIO:\r\n        audioManager.stopPublishAudio();\r\n        break;\r\n      case MediaType.VIDEO:\r\n        videoManager.stopPublishVideo(mediaId);\r\n        break;\r\n      case MediaType.SCREEN_SHARE:\r\n        shareManager.stopScreenShare();\r\n        break;\r\n      case MediaType.WHITE_BOARD:\r\n        whiteBoardManger.stopPublishWhiteBoard(mediaId);\r\n        break;\r\n      default:\r\n        logger.error(\"Unknown media type: \" + mediaType);\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 开始接收远端媒体，FIXME：需要返回Promise\r\n   * @param {*} userId \r\n   * @param {*} mediaType \r\n   * @param {*} mediaId \r\n   * @returns Promise\r\n   */\r\n  @tracelog\r\n  startReceiveMedia(userId, mediaType, mediaId) {      \r\n    switch(mediaType) {\r\n      case MediaType.AUDIO:\r\n        return audioManager.startReceiveAudio(userId, mediaId);\r\n      case MediaType.VIDEO:\r\n        return videoManager.startReceiveVideo(userId, mediaId);\r\n      case MediaType.SCREEN_SHARE:\r\n        return shareManager.startReceiveScreenShare(userId, mediaId);\r\n      case MediaType.WHITE_BOARD:\r\n        return whiteBoardManger.startReceiveWhiteBoard(userId, mediaId);\r\n      default:\r\n        return new Promise((resolve, reject) => {\r\n          reject(\"Unknown media type: \" + mediaType);\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 停止接收远端媒体\r\n   * @param {*} userId \r\n   * @param {*} mediaType \r\n   * @param {*} mediaId \r\n   */\r\n  @tracelog\r\n  stopReceiveMedia(userId, mediaType, mediaId) {      \r\n    switch(mediaType) {\r\n      case MediaType.AUDIO:\r\n        return audioManager.stopReceiveAudio(userId, mediaId);\r\n      case MediaType.VIDEO:\r\n        return videoManager.stopReceiveVideo(userId, mediaId);\r\n      case MediaType.SCREEN_SHARE:\r\n        return shareManager.stopReceiveScreenShare(userId, mediaId);\r\n      case MediaType.WHITE_BOARD:\r\n        return whiteBoardManger.stopReceiveWhiteBoard(userId, mediaId);\r\n      default:\r\n        logger.error(\"Unknown media type: \" + mediaType);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置媒体渲染器\r\n   * @param {*} userId      用户ID，可以是本地用户或远端用户 \r\n   * @param {*} mediaType   媒体类型：音频、视频、屏幕共享、电子白板\r\n   * @param {*} mediaId     媒体ID\r\n   * @param {*} renderEle   HTML标签，对于白板来说是canvas，其它是video\r\n   * @param {*} params      本地渲染有效 \r\n   */\r\n  @tracelog\r\n  setMediaRender(userId, mediaType, mediaId, renderEle, params) {\r\n    switch(mediaType) {\r\n      case MediaType.AUDIO: \r\n      case MediaType.VIDEO:\r\n      case MediaType.SCREEN_SHARE:\r\n        console.warn(\"Unexpected mediaType: \" + mediaType);\r\n        break;\r\n      case MediaType.WHITE_BOARD:\r\n        whiteBoardManger.setWhiteBoardRender(mediaId, renderEle, params);\r\n        break;\r\n      default:\r\n        logger.error(\"Unknown media type: \" + mediaType);\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 取消设置媒体渲染器\r\n   * @param {*} userId \r\n   * @param {*} mediaType FIXME：音频和视频都传入MediaType？\r\n   * @param {*} mediaId \r\n   */\r\n  @tracelog\r\n  unsetMediaRender(userId, mediaType, mediaId) {\r\n    logger.trace(\"Calling unsetMediaRender: \" + userId + \", \" + mediaType);\r\n    switch(mediaType) {\r\n      case MediaType.AUDIO: \r\n      case MediaType.VIDEO:\r\n      case MediaType.SCREEN_SHARE:\r\n        console.warn(\"Unexpected mediaType: \" + mediaType);\r\n        break;\r\n      case MediaType.WHITE_BOARD:\r\n        whiteBoardManger.unsetWhiteBoardRender(mediaId);\r\n        break;\r\n      default:\r\n        logger.error(\"Unknown media type: \" + mediaType);\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 设置音视频播放对象 \r\n   * @param {*} videoEle\r\n   * @param {*} streamId \r\n   */\r\n  _setMediaRender(userId, mediaType, mediaId, videoEle, videoParam){\r\n    if (userId == Store.userInfo.userId) { // 本端\r\n      if (mediaType == MediaType.VIDEO) {\r\n        videoManager.setLocalVideoRender(mediaId, videoEle, videoParam);\r\n      } else if (mediaType == MediaType.SCREEN_SHARE) {\r\n        shareManager.setLocalScreenShareRender(videoEle);\r\n      } else {\r\n        logger.error(\"Unexpected media type: \" + mediaType);\r\n      }\r\n    } else { // 远端\r\n      let pc = this.findDownPcByUserMeida(userId, mediaType, mediaId);\r\n      if (pc) {\r\n        videoEle.srcObject = pc.mediaStream;\r\n        pc.videoEle = videoEle;\r\n        if (this.curSpkDevId) { // 同时设置下扬声器\r\n          audioManager.setAudioSpeaker(videoEle);\r\n        }\r\n      } else {\r\n        logger.error(\"Cannot find down peer connection!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 取消设置音视频播放对象\r\n   * 音频不需要显式调用unset，本端没有渲染，远端停止接收即可\r\n   * @param {*} userId \r\n   * @param {*} videoEle \r\n   */\r\n  _unsetMediaRender(userId, videoEle) {\r\n    if (!videoEle || !('srcObject' in videoEle)){\r\n      logger.error(\"Invalid videoEle!\");\r\n      return;\r\n    }\r\n\r\n    if (userId == Store.userInfo.userId) { // 本端视频\r\n      if (videoEle.srcObject) {\r\n          for (const track of videoEle.srcObject.getTracks()) {\r\n            track.stop();\r\n          }\r\n          videoEle.srcObject = null;\r\n      } else {\r\n        logger.warn(\"Invalid srcObject!\");\r\n      }\r\n    } else { // 远端视频\r\n      videoEle.srcObject = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 通知有用户加入分组\r\n   * @param {*} msg \r\n   * @param {*} socket \r\n   */\r\n  onNotifyUserJoinGroup(msg, socket) {\r\n    eventRegistry.trigger(\"onUserJoinGroup\", msg.user_id);\r\n  }\r\n\r\n  /**\r\n   * 通知有用户退出分组\r\n   * @param {*} msg \r\n   * @param {*} socket \r\n   */\r\n  onNotifyUserLeaveGroup(msg, socket) {\r\n    eventRegistry.trigger(\"onUserLeaveGroup\", msg.user_id);\r\n  }\r\n\r\n    /**\r\n   * 构造事件类型\r\n   * @param {*} operation \r\n   * @param {*} userId \r\n   * @param {*} mediaType \r\n   * @param {*} mediaId \r\n   */\r\n  _getEventType(operation, userId, mediaType, mediaId) {\r\n    return (\r\n      (operation == RecvState.START_RECV) \r\n        ? EventType.EVENT_START_RCV_MEDIA \r\n        : EventType.EVENT_STOP_RCV_MEDIA\r\n      ) + getEventPostfix(userId, mediaType, mediaId)\r\n  }\r\n\r\n  /**\r\n   * 开始/停止接收音视频响应\r\n   * @param {*} data \r\n   * @param {*} socket \r\n   */\r\n  onRecvStreamRes(data, socket) {\r\n    try {\r\n      if (data.group_id.length === 0 || data.media_id.length === 0) {\r\n        throw \"Invalid recv stream response!!!\" + data;\r\n      }\r\n  \r\n      // 解析websocket服务地址\r\n      let streamServer = null;\r\n      if (data.stream_server) {\r\n        streamServer = getAddrs(\"ws\", data.stream_server);\r\n        if (!streamServer) {\r\n          throw \"Cannot find webrtc gateway: \" + data.stream_server;\r\n        }\r\n      } else {\r\n        throw \"Cannot find 'stream_server' in msg!\"\r\n      }\r\n  \r\n      if (data.media_type !== MediaType.WHITE_BOARD) {\r\n        let downPc = this.downPcMap.get(data.bind_id);\r\n        if (data.recv === RecvState.STOP_RECV) {\r\n          if (downPc) {\r\n            downPc.stopRecvStream({\r\n              userId: data.user_id,\r\n              mediaType: data.media_type,\r\n              mediaId: data.media_id\r\n            });\r\n          } else {\r\n            logger.warn(\"Have not recv the media, do nothing!\");\r\n          }\r\n        } else if (data.recv === RecvState.START_RECV) {\r\n          if (!downPc) {\r\n            downPc = new DownPeerConnection(data.bind_id);\r\n            this.downPcMap.set(data.bind_id, downPc);\r\n            logger.log(\"Add a down peer connection, count = \" + this.downPcMap.size);\r\n          }\r\n          downPc.startRecvStream({\r\n            userId: data.user_id,\r\n            mediaType: data.media_type,\r\n            mediaId: data.media_id,\r\n            streamId: data.stream_id,\r\n            streamServer: streamServer, \r\n            streamToken: data.subscribe_token\r\n          });\r\n        } else {\r\n          throw \"Unknown media operation: \" + data.recv;\r\n        }\r\n      } else { // 白板\r\n        if (data.recv === RecvState.START_RECV) {\r\n          whiteBoardManger.onStartRecvWhiteBoardRes({\r\n            userId: data.user_id,\r\n            mediaType: data.media_type,\r\n            mediaId: data.media_id,\r\n            streamId: data.stream_id,\r\n            streamServer: streamServer, \r\n            streamToken: data.subscribe_token\r\n          });\r\n        } else {\r\n          whiteBoardManger.onStopRecvWhiteBoardRes({\r\n            userId: data.user_id,\r\n            mediaType: data.media_type,\r\n            mediaId: data.media_id,\r\n            streamId: data.stream_id,\r\n          });\r\n        }\r\n      }\r\n  \r\n      eventRegistry.trigger(\r\n        this._getEventType(data.recv, data.user_id, data.media_type, data.media_id),\r\n        EventResult.SUCCESS);\r\n    } catch (err) {\r\n      logger.error(err)\r\n      eventRegistry.trigger(\r\n        this._getEventType(data.recv, data.user_id, data.media_type, data.media_id),\r\n        EventResult.FAILED);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 通知分组内其他用户媒体状态\r\n   * @param {*} data \r\n   * @param {*} socket \r\n   */\r\n  onNotifyUserMediaState(data, socket) {\r\n    if (data.media_type != MediaType.SCREEN_SHARE\r\n      && data.media_type != MediaType.AUDIO\r\n      && data.media_type != MediaType.VIDEO\r\n      && data.media_type != MediaType.WHITE_BOARD){\r\n      logger.warn(\"Unexpected media type: \", data.media_type);\r\n      return;\r\n    }\r\n\r\n    let params = {\r\n      userId: data.user_id, \r\n      mediaType: data.media_type,\r\n      mediaId: data.media_id,\r\n      mediaName: data.media_description\r\n    };\r\n\r\n    // 通知用户广播/停止广播\r\n    if (data.operation == MediaOper.STOP_PUBLISH){\r\n      eventRegistry.trigger(\"onUnPublishMedia\", params);\r\n    } else if (data.operation == MediaOper.START_PUBLISH) {\r\n      eventRegistry.trigger(\"onPublishMedia\", params);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 通知分组中全量用户及其媒体状态\r\n   * @param {*} data \r\n   * @param {*} socket \r\n   */\r\n  onNotifyGroupMediaStates(data, socket) {\r\n    // FIXME：在恢复的过程中，有可能媒体状态发生了改变，这里简化处理了\r\n    if (Store.restoring) {\r\n      Store.restoring = false\r\n      return\r\n    }\r\n    \r\n    let groupUsers = [];\r\n    for (const user of data.user_info) {\r\n      groupUsers.push(user.user_id);\r\n    }\r\n\r\n    // 先通知分组用户列表\r\n    if (groupUsers.length > 0){\r\n      eventRegistry.trigger(\"onGroupUserList\", groupUsers);\r\n    }\r\n\r\n    // 然后再通知媒体广播\r\n    for (const user of data.user_info) {\r\n      if (user.media_info.length <= 0) { \r\n        continue; \r\n      }\r\n    \r\n      for (const media of user.media_info) {\r\n        let params = {\r\n          userId: user.user_id,\r\n          mediaType: media.media_type,\r\n          mediaId: media.media_id,\r\n          mediaName: media.media_description\r\n        };\r\n        eventRegistry.trigger(\"onPublishMedia\", params);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new MediaManager();","import { MediaType, MediaOper, RecvState, EventType, RecvMagicMode } from \"../../common/enums\"\r\nimport protocolSender from \"../util/protocol-sender\"\r\nimport { promiseHandler } from \"../../common/promise-handler\"\r\nimport { getEventPostfix } from \"../../common/common\"\r\nimport mediaManager from \"./media-manager\"\r\nimport logger from \"../../common/logger\"\r\n\r\nclass AudioManager {\r\n  constructor() {\r\n    // Current microphone device\r\n    this.curMicDevId = null\r\n\r\n    // Current speaker device\r\n    this.curSpkDevId = null\r\n\r\n    // magic audio, 0: original\r\n    this.audioMagicValue = 0\r\n    this.recvMagicAudio = false\r\n  }\r\n\r\n  /**\r\n   * 开始广播音频\r\n   * @param {*} devId \r\n   */\r\n  startPublishAudio(devId) {\r\n    if (!devId) { // TODO：不允许默认设备\r\n      logger.error(\"Invalid devId!\")\r\n      return\r\n    }\r\n\r\n    // 保存指定的麦克风设备\r\n    this.setCurMicDevId(devId)\r\n\r\n    // 其他端SDK将音频的MediaId写死为“appdef_mic”，为了保持一致\r\n    // 这里强制把mediaId也写死为“appdef_mic”，但是可能会有问题\r\n    let mediaId = null\r\n    if (this.audioMagicValue == 0) {\r\n      mediaId = \"appdef_mic\"  // 原声\r\n    } else { // 变声\r\n      mediaId = \"appdef_mic_magic\"\r\n    }\r\n\r\n    protocolSender.sendPublishMediaReq(\r\n      MediaOper.START_PUBLISH, \r\n      MediaType.AUDIO, \r\n      mediaId)\r\n    \r\n    // 发布响应（暂未实现）\r\n    // return promiseHandler(EventType.EVENT_START_PUB_AUDIO)\r\n  }\r\n\r\n  /**\r\n   * 停止广播音频\r\n   * @param {*} devId 允许不填deviceId\r\n   */\r\n  stopPublishAudio(devId) {\r\n    let mediaId = null\r\n    if (this.audioMagicValue == 0) {\r\n      mediaId = \"appdef_mic\"  // 原声\r\n    } else { // 变声\r\n      mediaId = \"appdef_mic_magic\"\r\n    }\r\n\r\n    protocolSender.sendPublishMediaReq(\r\n      MediaOper.STOP_PUBLISH,\r\n      MediaType.AUDIO, \r\n      mediaId)\r\n\r\n    // 取消发布响应（暂未实现）\r\n    // return promiseHandler(EventType.EVENT_STOP_PUB_AUDIO)\r\n  }\r\n\r\n  /**\r\n   * 开始接收远端音频\r\n   * @param {*} userId \r\n   * @param {*} mediaId \r\n   */\r\n  startReceiveAudio(userId, mediaId) {\r\n    if (!userId || !mediaId) {\r\n      logger.error(\"Invalid srcUserId or mediaId!\")\r\n      return\r\n    }\r\n\r\n    protocolSender.sendRecvMediaReq(\r\n      RecvState.START_RECV, \r\n      userId, \r\n      MediaType.AUDIO, \r\n      mediaId)\r\n\r\n    // 可能同时接收多个音频，保证请求和响应匹配\r\n    return promiseHandler(EventType.EVENT_START_RCV_MEDIA + getEventPostfix(userId, MediaType.AUDIO, mediaId))\r\n  }\r\n\r\n  /**\r\n   * 停止接收远端音频\r\n   * @param {*} srcUserId \r\n   * @param {*} mediaId \r\n   */\r\n  stopReceiveAudio(srcUserId, mediaId) {\r\n    if (!srcUserId || !mediaId) {\r\n      logger.error(\"Invalid srcUserId or mediaId!\")\r\n      return\r\n    }\r\n\r\n    protocolSender.sendRecvMediaReq(\r\n      RecvState.STOP_RECV, \r\n      srcUserId, \r\n      MediaType.AUDIO, \r\n      mediaId)\r\n\r\n    return promiseHandler(EventType.EVENT_STOP_RCV_MEDIA + getEventPostfix(userId, MediaType.AUDIO, mediaId))\r\n  }\r\n\r\n  /**\r\n   * 选择扬声器设备\r\n   * @param {*} devId \r\n   */\r\n  chooseSpkDevice(devId) {\r\n    this.curSpkDevId = devId\r\n\r\n    // 更新所有downPeerConnection的扬声器设置\r\n    for (const downPc of mediaManager.downPcMap.values()) {\r\n      if (downPc.videoEle) {\r\n        this.setAudioSpeaker(downPc.videoEle)\r\n      }  \r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置本地是否发送变声\r\n   * @param {*} value 变声程度值，取值范围为[-12, 12]，0表示没有变声\r\n   */\r\n  setSendMagicAudioValue(value) {\r\n    if (this.audioMagicValue == value) return\r\n\r\n    this.audioMagicValue = value\r\n    logger.log(\"Set send audio magic to \" + value)\r\n\r\n    // 可能已经有音频正在发送中\r\n    for (const pc of mediaManager.upPcMap) {\r\n      for (const track of pc.upTracks) {\r\n        if (track.mediaType == MediaType.AUDIO) {\r\n          protocolSender.sendSetAudioMagic(pc.websocket, track.streamId, value)\r\n          break // 每个PC最多一路音频\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置是否接收变声\r\n   * @param {*} mode 0：跟随，1：只接原声，2：只接变声\r\n   */\r\n  setRecvMagicAudioMode(mode) {\r\n    if (mode != RecvMagicMode.FOLLOW \r\n      && mode != RecvMagicMode.ONLY_ORIGIN \r\n      && mode != RecvMagicMode.ONLY_MAGIC) {\r\n      logger.error(\"Invalid recv audio magic mode: \" + mode)\r\n      return\r\n    }\r\n    logger.log(\"Set recv audio magic mode: \" + mode)\r\n    this.recvMagicAudio = mode\r\n  }\r\n\r\n  /**\r\n   * 设置video标签上的音频到指定扬声器\r\n   * @param {*} videoEle \r\n   */\r\n  setAudioSpeaker(videoEle) {\r\n    if (typeof videoEle.sinkId !== 'undefined') {\r\n      videoEle.setSinkId(this.curSpkDevId).then(() => { \r\n        logger.log(\"Set speaker \" + this.curSpkDevId + \" success.\") \r\n      }).catch((err) => { \r\n        logger.error(\"Set speaker \" + this.curSpkDevId + \" failed!\", err) \r\n      })\r\n    } else {\r\n      logger.error(\"Invalid media element!\")\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置当前使用的麦克风设备\r\n   * TODO: 当前这个方法没有暴露出去，而curMicDev默认是null，如果在本地没有广播过\r\n   * 音频的前提下，远端想查看本地音频，这时候可能会出错\r\n   * @param {*} devId \r\n   */\r\n  setCurMicDevId(devId) {\r\n    if (devId) {\r\n      this.curMicDevId = devId\r\n    } else {\r\n      logger.error(\"Invalid microphone device!\")\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取当前使用的麦克风设备\r\n   */\r\n  getCurMicDevId() {\r\n    return this.curMicDevId\r\n  }\r\n\r\n  /**\r\n   * 获取当前使用的扬声器设备\r\n   */\r\n  getCurSpkDevId() {\r\n    return this.curSpkDevId\r\n  }\r\n\r\n  /**\r\n   * 构建音频设备采集的constraints\r\n   * @param {*} devId \r\n   */\r\n  buildConstraints(devId) {\r\n    let audioConstraints = { deviceId: devId }\r\n    return { audio: audioConstraints }\r\n  }\r\n}\r\n\r\nexport default new AudioManager()","import Store from \"./store\"\r\nimport { generateGUID } from \"../../common/common\"\r\nimport { MediaType, RecvMagicMode } from \"../../common/enums\"\r\nimport audioManager from \"../media/audio-manager\"\r\n\r\nclass ProtocolSender {\r\n  sendJoinGroupReq(groupId) {\r\n    let msg = {\r\n      business: \"GS\",\r\n      id: 14100,\r\n      group_id: groupId\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n  \r\n  sendLeaveGroupReq() {\r\n    let msg = {\r\n      business: \"GS\",\r\n      id: 14102\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n  \r\n  sendResolutionReport(websocket, params) {\r\n    let msg = {\r\n      business: \"SS\",\r\n      id: 18004,\r\n      stream_id: params.streamId,\r\n      width: params.width,\r\n      height: params.height,\r\n      channel_type: params.channelType,\r\n      report_type: params.reportType\r\n    };\r\n    websocket.send(JSON.stringify(msg));\r\n  }\r\n  \r\n  sendLogoutReq(){\r\n    let msg = {\r\n      business: \"BASE\",\r\n      id: 10002\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n  \r\n  sendLoginReq(options){\r\n    let msg = {\r\n      business: \"BASE\",\r\n      id: 10000,\r\n      app_id: options.appId,\r\n      company_id: options.companyId,\r\n      token: options.token,\r\n      user_id: options.userId,\r\n      client_guid: generateGUID(), // FIXME：不唯一\r\n      os_type: options.osType,\r\n      mutex_type: options.mutexType,\r\n      force_login: options.forceLogin, \r\n      registered_user: options.registered,\r\n      protocol_version: \"0.0.1\",\r\n      sdk_type: 26,\r\n      extend_info: options.extendInfo\r\n    };\r\n  \r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n  \r\n  sendPublishMediaReq(operation, mediaType, mediaId){\r\n    let msg = {\r\n      business: \"GS\",\r\n      id: 14104,\r\n      //媒体类型，0为屏幕共享，1为音频，2为视频\r\n      media_type: mediaType,\r\n      // TODO 如果需要发布多路流，需要传入MediaId，单路流不影响\r\n      media_id: mediaId,\r\n      //操作类型，0停止广播，1开启广播\r\n      operation: operation\r\n    };\r\n  \r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n  \r\n  sendRecvMediaReq(recvState, userId, mediaType, mediaId) {\r\n    let msg = {\r\n      business: \"SS\",\r\n      id: 18002,\r\n      group_id: Store.userInfo.groupId,\r\n      user_id: userId,\r\n      media_type: mediaType, //媒体类型，0为屏幕共享，1为音频，2为视频\r\n      media_id: mediaId,\r\n      recv: recvState       //0停止接收，1开启接收\r\n    };\r\n  \r\n    if (mediaType == MediaType.AUDIO) {\r\n      // 接收变声，但media_id没有_magic后缀，则加上后缀\r\n      if (audioManager.recvMagicAudio == RecvMagicMode.ONLY_MAGIC) {\r\n        if (mediaId.indexOf(\"_magic\") == -1) {\r\n          msg.media_id = mediaId + \"_magic\";\r\n        }  \r\n      } else if (audioManager.recvMagicAudio == RecvMagicMode.ONLY_ORIGIN) { // 接收原声，但media_id有_magic后缀，则剥掉后缀\r\n        if (mediaId.indexOf(\"_magic\") != -1) {\r\n          msg.media_id = mediaId.substr(0, mediaId.length - 6);\r\n        }\r\n      } else {\r\n        // Do nothing\r\n      }\r\n    }\r\n\r\n    // 白板属于组内资源\r\n    if (mediaType == MediaType.WHITE_BOARD) {\r\n      msg.media_owner = \"group\"\r\n    } else {\r\n      msg.media_owner = \"user\"\r\n    }\r\n  \r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n  \r\n  sendRecvWhiteboardReq(recvState, mediaType, mediaId) {\r\n    let msg = {\r\n      business: \"SS\",\r\n      id: 18002,\r\n      group_id: Store.userInfo.groupId,\r\n      media_type: mediaType, //媒体类型，0为屏幕共享，1为音频，2为视频, 4为白板\r\n      media_id: mediaId,\r\n      recv: recvState,       //0停止接收，1开启接收\r\n      source_type: 1\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n  \r\n  sendCreateWhiteboardReq(parmas) {\r\n    let defaultParmas = {\r\n      business: \"WBS\",\r\n      id: 19000,\r\n      cli_seq_id: 1,\r\n      board_type: 0, \r\n      width: 1280, \r\n      height: 768,\r\n      file_path: '',\r\n      convert_file_path: '',\r\n      page: 1\r\n    }\r\n    defaultParmas = Object.assign(defaultParmas, parmas)\r\n    Store.websocket.send(JSON.stringify(defaultParmas));\r\n  }\r\n  \r\n  sendCloseWhiteboardReq(mediaId) {\r\n    let msg = {\r\n      business: \"WBS\",\r\n      id: 19002,\r\n      whiteboard_id: mediaId\r\n    };\r\n    msg = Object.assign(msg, parmas)\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n  \r\n  sendNotifySendStreamRes(params) {\r\n    let msg = {\r\n      business: \"SS\",\r\n      id: 18001,\r\n      stream_id: params.streamId,\r\n      send: params.send,\r\n      result: params.result\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  } \r\n\r\n  sendLogoutRecvChannelReq(websocket, streamId) {\r\n    let msg = {\r\n      business: 'SS',\r\n      id: 19012,\r\n      stream_id: streamId,\r\n      client_id: \"{\" + Store.userInfo.appId + \";\" + Store.userInfo.groupId + \"};\" + Store.userInfo.userId\r\n    }\r\n    websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendLoginRecvChannelReq(websocket, params, bindId) {\r\n    let msg = {\r\n      business: 'WBS',\r\n      id: 19004,\r\n      stream_id: params.streamId,\r\n      stream_token: params.streamToken,\r\n      media_type: params.media_type,\r\n      media_id: params.media_id,\r\n      client_id: \"{\" + Store.userInfo.appId + \";\" + Store.userInfo.groupId + \"};\" + Store.userInfo.userId,\r\n      version: \"1.0.0\",\r\n      bind_id: bindId\r\n    }\r\n    websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendSdpInfo(websocket, description, pcId) {\r\n    let msg = {\r\n      business: \"SS\",\r\n      id: 19008,\r\n      type: description.type,\r\n      pc_id: pcId,\r\n      sdp: description.sdp\r\n    };\r\n    websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendCandidate(websocket, event, pcId) {\r\n    let msg = {\r\n      business: \"SS\",\r\n      id: 19008,\r\n      pc_id: pcId,\r\n      candidate: event.candidate.candidate,\r\n      sdpMid: event.candidate.sdpMid,\r\n      sdpMLineIndex: event.candidate.sdpMLineIndex\r\n    };\r\n    websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendLoginSendChannelReq(websocket, params, bindId) {\r\n    let msg = {\r\n      business: 'WBS',\r\n      id: 19006,\r\n      stream_id: params.streamId,\r\n      stream_token: params.streamToken,\r\n      media_type: params.mediaType,\r\n      media_id: params.mediaId,\r\n      client_id: Store.getClientId(),\r\n      version: \"1.0.0\",\r\n      bind_id: bindId\r\n    }\r\n    websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendSetAudioMagic(websocket, streamId, value) {\r\n    let msg = {\r\n      business: \"SS\",\r\n      id: 19010,\r\n      stream_id: streamId,\r\n      client_id: Store.getClientId(),\r\n      param: [{\r\n        param_type: \"SoundTouch\",\r\n        param_value: value.toString()\r\n      }]\r\n    };\r\n    websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  SendSetAudioMagicReq(websocket, streamId, value) {\r\n    let msg = {\r\n      business: \"SS\",\r\n      id: 19010,\r\n      stream_id: streamId,\r\n      client_id: Store.getClientId(),\r\n      param: [{\r\n        param_type: \"SoundTouch\",\r\n        param_value: value.toString()\r\n      }]\r\n    };\r\n    websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendGetWhiteBoardFullDataReq(websocket) {\r\n    let msg = {\r\n      id: 30003\r\n    };\r\n    websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendGetWhiteBoardFileUrlReq(filePath) {\r\n    let msg = {\r\n      business: 'STORE',\r\n      id: 20006,\r\n      file_path: filePath\r\n    }\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendUserMsg(params) {\r\n    let msg = {\r\n      business: \"SG\",\r\n      id: 11000,\r\n      dst_user_id: params.dstUserId,\r\n      msg_id: 1024,\r\n      msg: params.msg\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendUserMsgAck(params) {\r\n    let msg = {\r\n      business: \"SG\",\r\n      id: 11004,\r\n      src_user_id: params.src_user_id,\r\n      msg_id: params.msg_id\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendGroupMsgWithWhiteList(params) {\r\n    let msg = {\r\n      business: \"SG\",\r\n      id: 11006,\r\n      group_id: params.groupId,\r\n      white_list: params.whiteList,\r\n      msg_id: 1024,\r\n      msg: params.msg\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendGroupMsgWithBlackList(params) {\r\n    let msg = {\r\n      business: \"SG\",\r\n      id: 11006,\r\n      group_id: params.groupId,\r\n      black_list: params.blackList,\r\n      msg_id: 1024,\r\n      msg: params.msg\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendGroupMsg(params) {\r\n    let msg = {\r\n      business: \"SG\",\r\n      id: 11006,\r\n      group_id: params.groupId,\r\n      msg_id: 1024,\r\n      msg: params.msg\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendGroupMsgAck(params) {\r\n    let msg = {\r\n      business: \"SG\",\r\n      id: 11010,\r\n      group_id: params.group_id,\r\n      src_user_id: params.src_user_id,\r\n      msg_id: params.msg_id\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendKickOutRes() {\r\n    let msg = {\r\n      business: \"PS\",\r\n      id: 12008\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  }\r\n}\r\n\r\nexport default new ProtocolSender();","\r\nclass TxRoom {\r\n    constructor() {\r\n        this.serverDomain = 'https://fspwxlite.hst.com:443/weapp/webrtc_room';\r\n        //this.serverDomain = 'https://fspwxlite.haoshitong.com:8443/weapp/webrtc_room';\r\n        this.requestNum = 0;\r\n        this.heart = 0; // 判断心跳变量\r\n        this.heartBeatReq = 0;\r\n        this.requestSeq = 0; // 请求id\r\n        this.requestTask = []; // 请求task\r\n    }\r\n  \r\n    /**\r\n     * [request 封装request请求]\r\n     * @param {options}\r\n     *   url: 请求接口url\r\n     *   data: 请求参数\r\n     *   success: 成功回调\r\n     *   fail: 失败回调\r\n     *   complete: 完成回调\r\n     */\r\n    request(options) {\r\n      var self = this;\r\n      self.requestNum++;\r\n      var req = wx.request({\r\n        url: self.serverDomain + options.url,\r\n        data: options.data || {},\r\n        method: 'POST',\r\n        header: {\r\n          'content-type': 'application/json' // 默认值\r\n        },\r\n        // dataType: 'json',\r\n        success: function (res) {\r\n          if (res.data.code) {\r\n            console.error('服务器请求失败' + ', url=' + options.url + ', params = ' + (options.data ? JSON.stringify(options.data) : '') + ', 错误信息=' + JSON.stringify(res));\r\n            options.fail && options.fail({\r\n              errCode: res.data.code,\r\n              errMsg: res.data.message\r\n            })\r\n          } else {\r\n            options.success && options.success(res);\r\n          }\r\n        },\r\n        fail: function (res) {\r\n          console.error('请求失败' + ', url=' + options.url + ', 错误信息=' + JSON.stringify(res));\r\n          options.fail && options.fail(res);\r\n        },\r\n        complete: function () {\r\n          self.requestNum--;\r\n          console.log('complete requestNum: ', self.requestNum);\r\n        }\r\n      });\r\n      self.requestTask[self.requestSeq++] = req;\r\n      return req;\r\n    }\r\n  \r\n    /**\r\n     * [clearRequest 中断请求]\r\n     * @param {options}\r\n     */\r\n    clearRequest() {\r\n      var self = this;\r\n      for (var i = 0; i < self.requestSeq; i++) {\r\n        self.requestTask[i].abort();\r\n      }\r\n      self.requestTask = [];\r\n      self.requestSeq = 0;\r\n    }\r\n  \r\n    getLoginInfo(userID, success, fail) {\r\n      var self = this;\r\n      var data = {};\r\n      if (userID) {\r\n        data.userID = userID;\r\n      }\r\n      self.request({\r\n        url: '/get_login_info',\r\n        data: data,\r\n        success: success,\r\n        fail: fail\r\n      })\r\n    }\r\n  \r\n    getRoomList(index, count, success, fail) {\r\n      var self = this;\r\n      self.request({\r\n        url: '/get_room_list',\r\n        data: {\r\n          index: index,\r\n          count: count,\r\n          roomType: 'trtc'\r\n        },\r\n        success: success,\r\n        fail: fail\r\n      })\r\n    }\r\n  \r\n    createRoom(userID, roomInfo, success, fail) {\r\n      console.log('roomInfo', roomInfo);\r\n      var self = this;\r\n      self.request({\r\n        url: '/create_room',\r\n        data: {\r\n          userID: userID,\r\n          roomInfo: roomInfo,\r\n          roomType: 'trtc'\r\n        },\r\n  \r\n        success: function (res) {\r\n          success && success(res);\r\n        },\r\n  \r\n        fail: fail\r\n      });\r\n    }\r\n  \r\n    enterRoom(userID, roomID, success, fail) {\r\n      var self = this;\r\n      self.request({\r\n        url: '/enter_room',\r\n        data: {\r\n          userID: userID,\r\n          roomID: roomID\r\n        },\r\n        success: function (res) {\r\n          success && success(res);\r\n        },\r\n        fail: fail\r\n      })\r\n    }\r\n  \r\n    quitRoom(userID, roomID, success, fail) {\r\n      var self = this;\r\n      self.request({\r\n        url: '/quit_room',\r\n        data: {\r\n          userID: userID,\r\n          roomID: roomID\r\n        },\r\n        success: success,\r\n        fail: fail\r\n      });\r\n      // self.stopHeartBeat();\r\n    }\r\n  \r\n    startHeartBeat(userID, roomID, success, fail) {\r\n      var self = this;\r\n      self.heart = '1';\r\n      self.heartBeat(userID, roomID, success, fail);\r\n    }\r\n  \r\n    stopHeartBeat() {\r\n      var self = this;\r\n      self.heart = '';\r\n      if (self.heartBeatReq) {\r\n        console.log('停止心跳');\r\n        self.heartBeatReq.abort();\r\n        self.heartBeatReq = null;\r\n      }\r\n    }\r\n  \r\n    heartBeat(userID, roomID, success, fail) {\r\n      var self = this;\r\n      if (!self.heart) {\r\n        self.clearRequest();\r\n        return;\r\n      }\r\n      self.heartBeatReq = self.request({\r\n        url: '/heartbeat',\r\n        data: {\r\n          userID: userID,\r\n          roomID: roomID\r\n        },\r\n        success: function (res) {\r\n          if (self.heart) {\r\n            console.log('心跳成功');\r\n            success && success(res);\r\n            setTimeout(() => {\r\n              self.heartBeat(userID, roomID, success, fail);\r\n            }, 7000);\r\n          }\r\n        },\r\n        fail: function (res) {\r\n          fail && fail(res);\r\n          if (self.heart) {\r\n            setTimeout(() => {\r\n              self.heartBeat(userID, roomID, success, fail);\r\n            }, 7000);\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n  export default new TxRoom();\r\n  ","\r\nimport StateMachine from 'javascript-state-machine'\r\nimport Store from './util/store'\r\nimport { asyncWrapper, getAddrs } from '../common/common'\r\nimport HstWebSocket from './util/websocket'\r\nimport { EventResult, EventType } from '../common/enums'\r\nimport protocolSender from './util/protocol-sender'\r\nimport logger from \"../common/logger\"\r\nimport mediaManager from \"./media/media-manager\"\r\nimport wbManager from \"./media/white-board-manager\"\r\nimport shareManager from \"./media/share-manager\"\r\nimport eventRegistry from '../common/event-registry'\r\nimport txRoom from \"./util/tx-room\"\r\n\r\n/**\r\n * 主引擎状态机\r\n */\r\nlet RtcEngine = new StateMachine({\r\n  init: 'uninit',\r\n  transitions: [\r\n    {name: 'doInit',        from: ['uninit', 'restoring'],    to: 'initing'},   // 初始化\r\n    {name: 'initSuccess',   from: 'initing',   to: 'inited'},    // 初始化成功\r\n    {name: 'initFailed',    from: 'initing',   to: 'uninit'},    // 初始化失败\r\n    {name: 'doLogin',       from: 'inited',    to: 'logining'},  // 登陆\r\n    {name: 'loginSuccess',  from: 'logining',  to: 'logined'},   // 登陆成功\r\n    {name: 'loginFailed',   from: 'logining',  to: 'inited'},    // 登陆失败\r\n    {name: 'doJoin',        from: 'logined',   to: 'joining'},   // 加入分组\r\n    {name: 'joinSuccess',   from: 'joining',   to: 'joined'},    // 加入分组成功\r\n    {name: 'joinFailed',    from: 'joining',   to: 'logined'},   // 加入分组失败\r\n    {name: 'doLeave',       from: 'joined',    to: 'leaving'},   // 离开分组\r\n    {name: 'leaveSuccess',  from: 'leaving',   to: 'logined'},   // 离开分组成功\r\n    {name: 'leaveFailed',   from: 'leaving',   to: 'joined'},    // 离开分组失败\r\n    {name: 'doLogout',      from: 'logined',   to: 'logouting'}, // 退出登录\r\n    {name: 'logoutSuccess', from: 'logouting', to: 'inited'},    // 退出登录成功\r\n    {name: 'logoutFailed',  from: 'logouting', to: 'logined'},   // 退出登录失败\r\n    {name: 'doDestroy',     from: 'inited',    to: 'uninit'},    // 销毁\r\n    {name: 'doRestore',     from: 'joined',    to: 'restoring'}, // 断线重连 \r\n  ],\r\n  data: {\r\n    registered: false\r\n  },\r\n  methods: {\r\n    /**\r\n     * websocket关闭\r\n     */\r\n    onWebSocketClosed() {\r\n      logger.warn(\"Signalling websocket closed, state: \" + this.state);\r\n\r\n      Store.websocket.close()\r\n      Store.websocket = null\r\n\r\n      // TODO: 当前只处理以下一种状态\r\n      if (this.state == 'joined') {\r\n        this.doRestore();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * WebSocket连接成功\r\n     */\r\n    onWebSocketOpened() {\r\n      let options = {\r\n        appId: Store.userInfo.appId,\r\n        userId: Store.userInfo.userId,\r\n        token: Store.loginParams.token,\r\n        companyId: Store.loginParams.companyId,\r\n        osType: \"webchat\",\r\n        mutexType: Store.loginParams.mutexType,\r\n        forceLogin: Store.loginParams.forceLogin,\r\n        registered: Store.loginParams.registered,\r\n        extendInfo: Store.loginParams.extendInfo\r\n      }\r\n      protocolSender.sendLoginReq(options);\r\n    },\r\n\r\n    /**\r\n     * 离开分组处理\r\n     */\r\n    onLeaveGroup() {\r\n      Store.userInfo.groupId = null;\r\n      wbManager.reinitialize();\r\n    },\r\n\r\n    /**\r\n     * 登出处理\r\n     */\r\n    onLogout() {\r\n      this.onLeaveGroup();\r\n      Store.userInfo.userId = null;\r\n    },\r\n\r\n    /**\r\n     * 销毁引擎处理\r\n     */\r\n    onDestroy() {\r\n      this.onLogout();\r\n\r\n      Store.userInfo.appId = null;\r\n      Store.userInfo.token = null;\r\n      Store.userInfo.companyId = null;\r\n      \r\n      if (Store.websocket) {\r\n        Store.websocket.close();\r\n        Store.websocket = null;\r\n      }\r\n    },\r\n\r\n    //--------------------------------------------------------------------------\r\n    // 协议处理\r\n    //--------------------------------------------------------------------------\r\n    \r\n    /**\r\n     * 登录响应\r\n     * @params {*} msg \r\n     * @params {*} socket \r\n     */\r\n    onLoginRes(msg, socket) {\r\n      let self = this;\r\n      if (msg.result == 0) {\r\n        txRoom.getLoginInfo(Store.userInfo.userId, \r\n          function(res) {\r\n            self.loginSuccess({\r\n              sdkAppId: res.data.sdkAppID,\r\n              userSig: res.data.userSig,\r\n              accountType: res.data.accountType})\r\n          }, \r\n          function(res) {\r\n            self.loginFailed();\r\n          }\r\n        );\r\n      } else {\r\n        self.loginFailed(msg.result)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 登出响应\r\n     * @params {*} msg \r\n     * @params {*} socket \r\n     */\r\n    onLogoutRes(msg, socket) {\r\n      (msg.result == 0) ? this.logoutSuccess() : this.logoutFailed();\r\n    },\r\n\r\n    /**\r\n     * 加入分组响应\r\n     * @params {*} msg \r\n     * @params {*} socket \r\n     */\r\n    onJoinGroupRes(msg, socket) {\r\n      let self = this;\r\n      if (msg.result == 0) {\r\n        txRoom.getLoginInfo(\r\n          msg.room_id + \"_\" + Store.userInfo.userId, \r\n          function(res) {\r\n            let sdkAppId = res.data.sdkAppID;\r\n            let userSig = res.data.userSig;\r\n            txRoom.createRoom(\r\n              Store.userInfo.userId, \r\n              Store.userInfo.groupId,\r\n              function(res) {\r\n                console.log(\"createRoom success.\" + JSON.stringify(res));\r\n                self.joinSuccess({\r\n                  // 有两个RoomID，一个是Java服务上生成的RoomID，一个是网关生成的RoomID\r\n                  // 前一个RoomID只在Java服务上生效，后一个RoomID是在微信小程序使用的\r\n                  serverRoomId: res.data.roomID,\r\n                  serverUserId: msg.room_id + \"_\" + Store.userInfo.userId,\r\n                  txRoomId: msg.room_id,\r\n                  privateMapKey: res.data.privateMapKey,\r\n                  sdkAppId: sdkAppId,\r\n                  userSig: userSig\r\n                })\r\n              },\r\n              function(res) {\r\n                console.error(\"Creat room failed!\");\r\n                self.joinFailed();\r\n              }\r\n            );\r\n          },\r\n          function(res) {\r\n            console.error(\"Get login info failed!\");\r\n            self.joinFailed();\r\n          }\r\n        );\r\n      } else {\r\n        this.joinFailed();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 离开分组响应\r\n     * @params {*} msg \r\n     * @params {*} socket \r\n     */\r\n    onLeaveGroupRes(msg, socket) {\r\n      (msg.result == 0) ? this.leaveSuccess() : this.leaveFailed();\r\n    },\r\n\r\n    /**\r\n     * 被强制登出\r\n     * @params {*} msg \r\n     * @params {*} socket \r\n     */\r\n    onForceLogout(msg, socket) {\r\n      eventRegistry.trigger(\"onUserForceLogout\");\r\n    },\r\n\r\n    /**\r\n     * 被踢出（登录）\r\n     * @params {*} msg \r\n     * @params {*} socket \r\n     */\r\n    onKickOut(msg, socket) {\r\n      protocolSender.sendKickOutRes(); // 直接回复消息\r\n      eventRegistry.trigger(\"onKickOut\");\r\n      this.onDestroy();\r\n    },\r\n    \r\n    //--------------------------------------------------------------------------\r\n    // 状态机处理\r\n    //--------------------------------------------------------------------------\r\n\r\n    /**\r\n     * 执行初始化\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onDoInit: function(lifecycle, params) {\r\n      if (!this.registered) {\r\n        Store.msgDispatcher.addMsgHandler(10001, this.onLoginRes.bind(this));\r\n        Store.msgDispatcher.addMsgHandler(10003, this.onLogoutRes.bind(this));\r\n        Store.msgDispatcher.addMsgHandler(10004, this.onForceLogout.bind(this));\r\n        Store.msgDispatcher.addMsgHandler(12007, this.onKickOut.bind(this));\r\n        Store.msgDispatcher.addMsgHandler(14101, this.onJoinGroupRes.bind(this));\r\n        Store.msgDispatcher.addMsgHandler(14103, this.onLeaveGroupRes.bind(this));\r\n        this.registered = true;\r\n      }\r\n\r\n      asyncWrapper(()=>{this.initSuccess()});\r\n    },\r\n    /**\r\n     * 打印状态转移信息\r\n     * @param {*} lifecycle \r\n     */\r\n    onTransition(lifecycle) {\r\n      logger.state(\"transition: \" + lifecycle.transition + \", from \" + lifecycle.from + \" to \" + lifecycle.to)\r\n    },\r\n\r\n    /**\r\n     * 初始化成功\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onInitSuccess: function(lifecycle, params) {\r\n      if (!Store.restoring) {\r\n        eventRegistry.trigger(EventType.EVENT_INIT, EventResult.SUCCESS)\r\n      } else {\r\n        let params = {\r\n          userId: Store.userInfo.userId,\r\n          appId: Store.userInfo.appId,\r\n          companyId: Store.loginParams.companyId,\r\n          token: Store.loginParams.token,\r\n          forceLogin: true, // 防止用户冲突\r\n          mutexType: Store.loginParams.mutexType,\r\n          extendInfo: Store.loginParams.extendInfo,\r\n          accessUrl: Store.loginParams.accessUrl\r\n        }\r\n        asyncWrapper(()=>{this.doLogin(params)})\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 初始化失败\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onInitFailed: function(lifecycle, params) {\r\n      if (!Store.restoring) {\r\n        eventRegistry.trigger(EventType.EVENT_INIT, EventResult.FAILED);\r\n      } else {\r\n        Store.restoring = false\r\n        logger.warn(\"Restoring failed for init!\")\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * 执行登录\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onDoLogin: function(lifecycle, params) {\r\n      if (!params.userId) {\r\n        asyncWrapper(()=>{this.loginFailed(\"Invalid userId!\")})\r\n      } else {\r\n        Store.userInfo.userId = params.userId;\r\n      }\r\n\r\n      if (!params.appId) {\r\n        asyncWrapper(()=>{this.loginFailed(\"Invalid appId!\")})\r\n      } else {\r\n        Store.userInfo.appId = params.appId;\r\n      }\r\n\r\n      if (!params.token) {\r\n        asyncWrapper(()=>{this.loginFailed(\"Invalid token!\")})\r\n      } else {\r\n        Store.loginParams.token = params.token;\r\n      }\r\n\r\n      // 如果没有指定Access地址，则默认使用公有云服务\r\n      if (!params.accessUrl) {\r\n        params.accessUrl = \"https://access.paas.hst.com/server/address\";\r\n      }\r\n      Store.loginParams.accessUrl = params.accessUrl\r\n\r\n      if (params.forceLogin) {\r\n        Store.loginParams.forceLogin = params.forceLogin ? 1 : 0;\r\n      }\r\n\r\n      if (params.extendInfo) {\r\n        Store.loginParams.extendInfo = params.extendInfo;\r\n      }\r\n\r\n      if (params.companyId) {\r\n        Store.loginParams.companyId = params.companyId;\r\n      }\r\n\r\n      if (params.mutexType) {\r\n        Store.loginParams.mutexType = params.mutexType;\r\n      }\r\n\r\n      let self = this;\r\n      try {\r\n        // 获取WebSocket信令网关地址并创建连接\r\n        wx.request({\r\n          url: Store.buildGetGateWayUrl(params.accessUrl),\r\n          data: {},\r\n          method: 'GET',\r\n          header: {\r\n            'content-type': 'application/json' // 默认值\r\n          },\r\n          success: function (res) {\r\n            console.log(\"Response from access service: \" + JSON.stringify(res));\r\n            if (res.data.code == 0) {\r\n              const gwAddr = getAddrs('ws', res.data.result);\r\n              if (gwAddr) {\r\n                let options = {\r\n                  addrUrl: [gwAddr],\r\n                  handler: Store.msgDispatcher,\r\n                  opened() { self.onWebSocketOpened(); },\r\n                  closed() { self.onWebSocketClosed(); },\r\n                  error() { self.loginFailed(\"Websocket error!\"); }\r\n                };\r\n                Store.websocket = new HstWebSocket(options);\r\n              } else {\r\n                throw \"Cannot find websocket gateway from response!\";\r\n              }\r\n            } else {\r\n              throw \"Get websocket gateway error!\";\r\n            }\r\n          },\r\n          fail: function (res) {\r\n            throw \"Get websocket gateway failed\";\r\n          },\r\n          complete: function (res) {\r\n            console.log(\"Get websocket gateway complete\");\r\n          }\r\n        });\r\n      } catch (err) {\r\n        asyncWrapper(()=>{self.loginFailed(err);})\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 登录成功\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onLoginSuccess: function(lifecycle, params) {\r\n      if (!Store.restoring) {\r\n        eventRegistry.trigger(EventType.EVENT_LOGIN, EventResult.SUCCESS, params);\r\n      } else {\r\n        asyncWrapper(()=>{this.doJoin(Store.userInfo.groupId)})\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 登录失败\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onLoginFailed: function(lifecycle, params) {\r\n      logger.error(\"Login failed: \" + params);\r\n      if (!Store.restoring) {\r\n        eventRegistry.trigger(EventType.EVENT_LOGIN, EventResult.FAILED);\r\n      } else {\r\n        Store.restoring = false\r\n        logger.warn(\"Restoring failed for login!\")\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 执行加入分组\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onDoJoin: function(lifecycle, params) {\r\n      protocolSender.sendJoinGroupReq(params);\r\n      Store.userInfo.groupId = params;\r\n    },\r\n\r\n    /**\r\n     * 加入分组成功\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onJoinSuccess: function(lifecycle, params) {\r\n      if (!Store.restoring) {\r\n        eventRegistry.trigger(EventType.EVENT_JOIN_GROUP, EventResult.SUCCESS, params);\r\n      } else {\r\n        // Store.restoring = false\r\n        logger.log(\"Restoring success.\")\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 加入分组失败\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onJoinFailed: function(lifecycle, params) {\r\n      if (!Store.restoring) {\r\n        eventRegistry.trigger(EventType.EVENT_JOIN_GROUP, EventResult.FAILED);\r\n      } else {\r\n        Store.restoring = false\r\n        logger.warn(\"Restoring failed for join group!\")\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 执行离开分组\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onDoLeave: function(lifecycle, params) {\r\n      protocolSender.sendLeaveGroupReq();\r\n    },\r\n\r\n    /**\r\n     * 离开分组成功\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onLeaveSuccess: function(lifecycle, params) {\r\n      this.onLeaveGroup();\r\n      eventRegistry.trigger(EventType.EVENT_LEAVE_GROUP, EventResult.SUCCESS);\r\n    },\r\n\r\n    /**\r\n     * 离开分组失败\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onLeaveFailed: function(lifecycle, params) {\r\n      eventRegistry.trigger(EventType.EVENT_LEAVE_GROUP, EventResult.FAILED);\r\n    },\r\n\r\n    /**\r\n     * 执行登出\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onDoLogout: function(lifecycle, params) {\r\n      protocolSender.sendLogoutReq();\r\n    },\r\n\r\n    /**\r\n     * 登出成功\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onLogoutSuccess: function(lifecycle, params) {\r\n      this.onLogout();\r\n      eventRegistry.trigger(EventType.EVENT_LOGOUT, EventResult.SUCCESS);\r\n    },\r\n\r\n    /**\r\n     * 登出失败\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onLogoutFailed: function(lifecycle, params) {\r\n      eventRegistry.trigger(EventType.EVENT_LOGOUT, EventResult.FAILED);\r\n    },\r\n\r\n    /**\r\n     * 销毁引擎\r\n     * @params {*} lifecycle \r\n     * @params {*} params \r\n     */\r\n    onDoDestroy: function(lifecycle, params) {\r\n      this.onDestroy();\r\n    },\r\n\r\n    /**\r\n     * 断线重连\r\n     * @param {*} lifecycle \r\n     * @param {*} params \r\n     */\r\n    onRestoring: function(lifecycle, params) {\r\n      Store.restoring = true\r\n      asyncWrapper(()=>{this.doInit()})\r\n    }\r\n  }\r\n});\r\n\r\nexport default RtcEngine;\r\n","import { EventResult, EventType } from \"../../common/enums\"\r\nimport Store from \"../util/store\"\r\nimport eventRegistry from \"../../common/event-registry\"\r\n\r\nclass OnlineManager {\r\n  constructor() {\r\n    // 全量用户数据可能会分页\r\n    this.cachedUserList = null;\r\n\r\n    // 注册消息处理函数\r\n    Store.msgDispatcher.addMsgHandler(12120, this.onGetOnlineUsersRes.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(12123, this.onOnlineUsersNotify.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(14001, this.onInviteRes.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(14002, this.onNotifyInvite.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(14004, this.onNotifyIgnoreInvite.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(14007, this.onCancelInviteRes.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(14008, this.onNotifyCancelInvite.bind(this));\r\n  }\r\n\r\n  /**\r\n   * 获取所有在线用户列表\r\n   */\r\n  getOnlineUsers() {\r\n    let msg = {\r\n      business: \"PS\",\r\n      id: 12119,\r\n      seq_id: (Math.floor(Math.random()*4096))\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  };\r\n\r\n  /**\r\n   * 获取在线用户列表响应\r\n   * @param {*} data \r\n   */\r\n  onGetOnlineUsersRes(data) {\r\n    if (data.result != 0) {\r\n      eventRegistry.trigger(\r\n        EventType.EVENT_GET_ONLINE_USERS, \r\n        EventResult.FAILED);\r\n      return;\r\n    }\r\n    \r\n    let pageInfo = {\r\n      totalPages: data.page_info.total_pages,\r\n      curPage: data.page_info.cur_page\r\n    };\r\n    \r\n    let userInfo = [];\r\n    for (const user of data.member_state_list) {\r\n      let u = {\r\n        userId: user.uid,\r\n        onlineInfo: []\r\n      };\r\n  \r\n      for (const info of user.online_info) {\r\n        let state = {\r\n          mutexType: info.mutex_type,\r\n          customState: info.custom_state,\r\n          state: info.state,\r\n          extendInfo: info.extend_info\r\n        };\r\n        u.onlineInfo.push(state);\r\n      }\r\n  \r\n      userInfo.push(u);\r\n    }\r\n  \r\n    let params = {\r\n      pageInfo: pageInfo,\r\n      userInfo: userInfo\r\n    };\r\n  \r\n    eventRegistry.trigger(\r\n      EventType.EVENT_GET_ONLINE_USERS, \r\n      EventResult.SUCCESS, \r\n      params);\r\n\r\n    this.cachedUserList = null;\r\n  };\r\n\r\n  /**\r\n   * 邀请其他用户加入分组\r\n   * @param {*} params \r\n   */\r\n  invite(params) {\r\n    let msg = {\r\n      business: \"GS\",\r\n      id: 14000,\r\n      seq_id: params.seqId,\r\n      group_id: params.groupId,\r\n      callee_info: [],\r\n      extend_info: params.extendInfo\r\n    };\r\n\r\n    // 转换userId字段名\r\n    for (const userId of params.calleeInfo) {\r\n      msg.callee_info.push({user_id: userId});\r\n    }\r\n\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  };\r\n\r\n  /**\r\n   * 响应邀请\r\n   * @param {*} params \r\n   */\r\n  replyInvite(params) {\r\n    let msg = {\r\n      business: \"GS\",\r\n      id: 14003,\r\n      seq_id: params.seqId,\r\n      group_id: params.groupId,\r\n      operate: params.operation,\r\n      extend_info: params.extendInfo\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  };\r\n\r\n  /**\r\n   * 邀请方取消邀请协议\r\n   * @param {*} params \r\n   */\r\n  cancelInvite(params) {\r\n    let msg = {\r\n      business: \"GS\",\r\n      id: 14006,\r\n      seq_id: params.seqId,\r\n      group_id: params.groupId,\r\n      callee_info: params.calleeInfo\r\n    };\r\n    Store.websocket.send(JSON.stringify(msg));\r\n  };\r\n\r\n  /**\r\n   * 增量在线用户推送\r\n   * @param {*} data \r\n   */\r\n  onOnlineUsersNotify(data) {\r\n    let result = data.result;\r\n    let params = {\r\n      userId: data.user_id,\r\n      mutexType: data.mutex_type,\r\n      state: data.operation,\r\n      customState: data.custom_state,\r\n      extendInfo: data.extend_info\r\n    };\r\n    eventRegistry.trigger(\"onOnlineUserState\", params);\r\n  };\r\n\r\n  /**\r\n   * 邀请响应\r\n   * @param {*} data \r\n   */\r\n  onInviteRes(data) {\r\n    let params = {\r\n      seqId: data.seq_id,\r\n      userId: data.user_id,\r\n      result: data.result\r\n    };\r\n    eventRegistry.trigger(\"onInviteReply\", params);\r\n  };\r\n\r\n  /**\r\n   * 服务器通知被邀请者\r\n   * @param {*} data \r\n   */\r\n  onNotifyInvite(data) {\r\n    let params = {\r\n      seqId: data.seq_id,\r\n      groupId: data.group_id,\r\n      userId: data.user_id,\r\n      userName: data.user_name,\r\n      extendInfo: data.extend_info\r\n    };\r\n    eventRegistry.trigger(\"onCommingInvite\", params);\r\n  };\r\n\r\n  /**\r\n   * 服务器通知被邀请者忽略邀请\r\n   * @param {*} data \r\n   */\r\n  onNotifyIgnoreInvite(data) {\r\n    let params = {\r\n      groupId: data.group_id,\r\n      userId: data.user_id,\r\n      userName: data.user_name\r\n    };\r\n    eventRegistry.trigger(EventType.EVENT_NOTICE_IGNORE_INVITE, params);\r\n  };\r\n\r\n  /**\r\n   * 取消邀请响应\r\n   * @param {*} data \r\n   */\r\n  onCancelInviteRes(data) {\r\n    let result = data.result;\r\n    let params = {\r\n      seqId: data.seq_id,\r\n      userId: data.user_id,\r\n    };\r\n    eventRegistry.trigger(EventType.EVENT_CANCEL_INVITE, result, params);\r\n  };\r\n\r\n  /**\r\n   * 服务器通知取消邀请\r\n   * @param {*} data \r\n   */\r\n  onNotifyCancelInvite(data) {\r\n    let params = {\r\n      seqId: data.seq_id,\r\n      userId: data.user_id,\r\n    };\r\n    eventRegistry.trigger(EventType.EVENT_NOTICE_CANCEL_INVITE, params);\r\n  };\r\n}\r\n\r\nexport default new OnlineManager();","import eventRegistry from '../common/event-registry'\r\n\r\nexport function initSubscribe(HstRtcEngine) {\r\n  /**\r\n   * 订阅事件\r\n   */  \r\n  HstRtcEngine.prototype.subEvent = function () {\r\n    console.log(\"Subscribe event: \", arguments[0]);\r\n    eventRegistry.on(...arguments)\r\n  }\r\n\r\n  /**\r\n   * 取消订阅事件，参数为空则为取消订阅所有事件\r\n   */\r\n  HstRtcEngine.prototype.unsubEvent = function () {\r\n    console.log(\"Unsubscribe event: \", arguments[0]);\r\n    eventRegistry.off(...arguments);  \r\n  }\r\n}","import rtcEngine from '../main/rtc-engine'\r\nimport { promiseHandler } from '../common/promise-handler'\r\nimport { EventType } from \"../common/enums\"\r\n\r\nexport function initPlatform(HstEngine) {\r\n  /**\r\n   * 初始化引擎\r\n   * @params {*} params \r\n   */\r\n  HstEngine.prototype.init = function(params) {\r\n    rtcEngine.doInit(params);\r\n    return promiseHandler(EventType.EVENT_INIT);\r\n  };\r\n\r\n  /**\r\n   * 登录\r\n   * @params {*} params \r\n   */\r\n  HstEngine.prototype.login = function(params) {\r\n    rtcEngine.doLogin(params);\r\n    return promiseHandler(EventType.EVENT_LOGIN);\r\n  };\r\n\r\n  /**\r\n   * 加入分组\r\n   * @params {*} groupId \r\n   */\r\n  HstEngine.prototype.joinGroup = function(groupId) {\r\n    rtcEngine.doJoin(groupId);\r\n    return promiseHandler(EventType.EVENT_JOIN_GROUP);\r\n  };\r\n\r\n  /**\r\n   * 离开分组\r\n   */\r\n  HstEngine.prototype.leaveGroup = function() {\r\n    rtcEngine.doLeave();\r\n    return promiseHandler(EventType.EVENT_LEAVE_GROUP);\r\n  };\r\n\r\n  /**\r\n   * 退出\r\n   */\r\n  HstEngine.prototype.logout = function() {\r\n    rtcEngine.doLogout();\r\n    return promiseHandler(EventType.EVENT_LOGOUT);\r\n  };\r\n\r\n  /**\r\n   * 销毁引擎\r\n   */\r\n  HstEngine.prototype.destroy = function() {\r\n    rtcEngine.doDestroy();\r\n  }\r\n}","\r\nimport audioManager from \"../main/media/audio-manager\";\r\nimport mediaManager from \"../main/media/media-manager\"\r\nimport whiteBoardManger from \"../main/media/white-board-manager\"\r\n\r\n\r\nexport function initMedia(hstRtcEngine) {\r\n  /**\r\n   * 开始广播本地媒体\r\n   * @param {*} mediaType \r\n   * @param {*} mediaId \r\n   * @param {*} params\r\n   * @returns 无\r\n   */\r\n  hstRtcEngine.prototype.startPublishMedia = function(mediaType, mediaId, params) {\r\n    mediaManager.startPublishMedia(mediaType, mediaId, params)\r\n  };\r\n\r\n  /**\r\n   * 停止广播本地媒体\r\n   * @param {*} mediaType \r\n   * @param {*} mediaId\r\n   * @returns 无 \r\n   */\r\n  hstRtcEngine.prototype.stopPublishMedia = function(mediaType, mediaId) {\r\n    mediaManager.stopPublishMedia(mediaType, mediaId);\r\n  };\r\n\r\n  /**\r\n   * 开始接收远端媒体\r\n   * @param {*} userId \r\n   * @param {*} mediaType \r\n   * @param {*} mediaId \r\n   * @returns Promise\r\n   */\r\n  hstRtcEngine.prototype.startReceiveMedia = function(userId, mediaType, mediaId) {      \r\n    return mediaManager.startReceiveMedia(userId, mediaType, mediaId);\r\n  };\r\n\r\n  /**\r\n   * 停止接收远端媒体\r\n   * @param {*} userId \r\n   * @param {*} mediaType \r\n   * @param {*} mediaId \r\n   * @returns Promise\r\n   */\r\n  hstRtcEngine.prototype.stopReceiveMedia = function(userId, mediaType, mediaId) {      \r\n    return mediaManager.stopReceiveMedia(userId, mediaType, mediaId);\r\n  };\r\n\r\n  /**\r\n   * 设置媒体渲染器\r\n   * @param {*} userId      用户ID，可以是本地用户或远端用户 \r\n   * @param {*} mediaType   媒体类型：音频、视频、屏幕共享、电子白板\r\n   * @param {*} mediaId     媒体ID\r\n   * @param {*} renderEle   HTML标签，对于白板来说是canvas，其它是video\r\n   * @param {*} params      控制本地采集分辨率和帧率 \r\n   */\r\n  hstRtcEngine.prototype.setMediaRender = function(userId, mediaType, mediaId, renderEle, params) {\r\n    mediaManager.setMediaRender(userId, mediaType, mediaId, renderEle, params);\r\n  };\r\n\r\n  /**\r\n   * 取消设置媒体渲染器\r\n   * @param {*} userId \r\n   * @param {*} mediaType FIXME：音频和视频都传入MediaType？\r\n   * @param {*} htmlEle \r\n   */\r\n  hstRtcEngine.prototype.unsetMediaRender = function(userId, mediaType, mediaId) {\r\n    mediaManager.unsetMediaRender(userId, mediaType, mediaId);\r\n  };\r\n\r\n  /**\r\n   * 设置本地是否发送变声\r\n   * @param {*} value 变声程度值，取值范围为[-12, 12]，0表示没有变声\r\n   */\r\n  hstRtcEngine.prototype.setSendMagicAudioValue = function(value) {\r\n    audioManager.setSendMagicAudioValue(value)\r\n  };\r\n\r\n  /**\r\n   * 设置是否接收变声\r\n   * @param {*} mode 0：跟随，1：只接原声，2：只接变声\r\n   */\r\n  hstRtcEngine.prototype.setRecvMagicAudioMode = function(mode) {\r\n    audioManager.setRecvMagicAudioMode(mode)\r\n  };\r\n\r\n  /**\r\n   * 创建白板\r\n   */\r\n  hstRtcEngine.prototype.createWhiteBoard = function (params) {\r\n    return whiteBoardManger.createWhiteBoard(params);\r\n  }\r\n\r\n  /**\r\n   * 关闭白板\r\n   * @param {*} mediaId \r\n   */\r\n  hstRtcEngine.prototype.closeWhiteBoard = function (mediaId) {\r\n    return whiteBoardManger.closeWhiteBoard(mediaId);\r\n  }\r\n\r\n  /**\r\n   * 设置白板显示模式\r\n   * @param {*} mediaId 指定白板，为null表示所有白板\r\n   * @param {*} mode 1：等比完整，2：等比适应，3：等比缩放\r\n   * @param {*} param mode为3时，指定缩放比例\r\n   */\r\n  hstRtcEngine.prototype.setWhiteBoardDisplayMode =  function(mediaId, mode, param) {\r\n    return whiteBoardManger.setDisplayMode(mediaId, mode, param);\r\n  }\r\n}\r\n","import protocolSender from \"../util/protocol-sender\"\r\nimport Store from \"../util/store\"\r\nimport eventRegistry from \"../../common/event-registry\"\r\n\r\nclass MessageManager {\r\n  constructor() {\r\n    Store.msgDispatcher.addMsgHandler(11000, this._onRecvUserMsg.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(11006, this._onRecvGroupMsg.bind(this));\r\n    Store.msgDispatcher.addMsgHandler(11010, this._onRecvServerAck.bind(this));\r\n  }\r\n\r\n  /**\r\n   * 发送单播消息\r\n   * @param {*} params \r\n   */\r\n  sendUserMsg(params) {\r\n    protocolSender.sendUserMsg(params);\r\n  };\r\n\r\n  /**\r\n   * 发送白名单消息\r\n   * @param {*} params \r\n   */\r\n  sendGroupMsgWithWhiteList(params) {\r\n    protocolSender.sendGroupMsgWithWhiteList(params);\r\n  };\r\n\r\n  /**\r\n   * 发送黑名单消息\r\n   * @param {*} params \r\n   */\r\n  sendGroupMsgWithBlackList(params) {\r\n    protocolSender.sendGroupMsgWithBlackList(params);\r\n  };\r\n\r\n  /**\r\n   * 发送广播消息\r\n   * @param {*} params \r\n   */\r\n  sendGroupMsg(params) {\r\n    protocolSender.sendGroupMsg(params);\r\n  };\r\n\r\n  /**\r\n   * 收到用户消息\r\n   * @param {*} data \r\n   */\r\n  _onRecvUserMsg(data) {\r\n    eventRegistry.trigger(\"onRecvUserMsg\", {\r\n      srcUserId: data.src_user_id,\r\n      msg: data.msg,\r\n      msgId: data.msg_id\r\n    });\r\n    protocolSender.sendUserMsgAck(data);\r\n  };\r\n\r\n  /**\r\n   * 收到分组消息\r\n   * @param {*} data \r\n   */\r\n  _onRecvGroupMsg(data) {\r\n    eventRegistry.trigger(\"onRecvGroupMsg\", {\r\n      srcUserId: data.src_user_id,\r\n      groupId: data.group_id,\r\n      msg: data.msg,\r\n      msgId: data.msg_id\r\n    });\r\n    protocolSender.sendGroupMsgAck(data);\r\n  }\r\n\r\n  /**\r\n   * 收到服务器Ack消息，说明服务器已经收到\r\n   * @param {*} data \r\n   */\r\n  _onRecvServerAck(data) {\r\n    // TODO: 暂时不做处理\r\n  }\r\n}\r\n\r\nexport default new MessageManager();","import { initPlatform } from './export/platform-export'\r\nimport { initSubscribe } from './export/subevent-export'\r\nimport { initMedia } from './export/media-export'\r\nimport { initOnline } from './export/online-export'\r\nimport { initEnums} from './export/enums-export'\r\nimport { initMessage } from \"./export/message-export\"\r\n\r\nfunction HstRtcEngine() {\r\n  if (process.env.NODE_ENV !== \"production\" && !(this instanceof HstRtcEngine)) {\r\n    console.error(\"HstRtcEngine is a constructor and should be called with the `new` keyword\");\r\n  }\r\n}\r\n\r\ninitSubscribe(HstRtcEngine);\r\ninitPlatform(HstRtcEngine);\r\ninitMedia(HstRtcEngine);\r\ninitOnline(HstRtcEngine);\r\ninitEnums(HstRtcEngine);\r\ninitMessage(HstRtcEngine);\r\n\r\nexport default HstRtcEngine;","import { promiseHandler } from \"../common/promise-handler\"\r\nimport onlineManager from \"../main/online/online-manager\"\r\nimport { EventType } from \"../common/enums\"\r\n\r\nexport function initOnline(hstRtcEngine) {\r\n  /**\r\n   * 获取所有在线用户列表\r\n   */\r\n  hstRtcEngine.prototype.getOnlineUsers = function() {\r\n    onlineManager.getOnlineUsers();\r\n    return promiseHandler(EventType.EVENT_GET_ONLINE_USERS);\r\n  };\r\n\r\n  /**\r\n   * 邀请其他用户加入分组\r\n   * @param {*} params \r\n   */\r\n  hstRtcEngine.prototype.invite = function(params) {\r\n    onlineManager.invite(params);\r\n    return promiseHandler(EventType.EVENT_INVITE);\r\n  };\r\n\r\n  /**\r\n   * 响应邀请\r\n   * @param {*} params \r\n   */\r\n  hstRtcEngine.prototype.replyInvite = function(params) {\r\n    onlineManager.replyInvite(params);\r\n  };\r\n\r\n  /**\r\n   * 邀请方取消邀请协议\r\n   * @param {*} params \r\n   */\r\n  hstRtcEngine.prototype.cancelInvite = function(params) {\r\n    onlineManager.cancelInvite(params);\r\n    return promiseHandler(EventType.EVENT_CANCEL_INVITE);\r\n  };\r\n}\r\n","\r\nexport function initEnums(hstRtcEngine) {\r\n  /**\r\n   * 导出的媒体类型\r\n   */\r\n  hstRtcEngine.prototype.MediaType = {\r\n    SCREEN_SHARE: 0,\r\n    AUDIO: 1,\r\n    VIDEO: 2,\r\n    TRANSPARENT_DATA: 3,\r\n    WHITE_BOARD: 4\r\n  };\r\n\r\n  /**\r\n   * 导出的在线状态\r\n   */\r\n  hstRtcEngine.prototype.OnlineType = {\r\n    OFFLINE: 0,\r\n    ONLINE: 1\r\n  };\r\n\r\n  /**\r\n   * 导出白板显示模式\r\n   */\r\n  hstRtcEngine.prototype.DisplayMode = {\r\n    DBWZ: 1,  // 等比完整\r\n    DBSY: 2,  // 等比适应\r\n    DBSF: 3   // 等比缩放\r\n  }\r\n}\r\n","import msgManger from \"../main/message/message-manager\"\r\n\r\nexport function initMessage(hstRtcEngine) {\r\n  /**\r\n   * 发送单播消息\r\n   * @param {*} params \r\n   */\r\n  hstRtcEngine.prototype.sendUserMsg = function(params) {\r\n    msgManger.sendUserMsg(params);\r\n  };\r\n\r\n  /**\r\n   * 发送白名单消息\r\n   * @param {*} params \r\n   */\r\n  hstRtcEngine.prototype.sendGroupMsgWithWhiteList = function(params) {\r\n    msgManger.sendGroupMsgWithWhiteList(params);\r\n  };\r\n\r\n  /**\r\n   * 发送黑名单消息\r\n   * @param {*} params \r\n   */\r\n  hstRtcEngine.prototype.sendGroupMsgWithBlackList = function(params) {\r\n    msgManger.sendGroupMsgWithBlackList(params);\r\n  };\r\n\r\n  /**\r\n   * 发送广播消息\r\n   * @param {*} params \r\n   */\r\n  hstRtcEngine.prototype.sendGroupMsg = function(params) {\r\n    msgManger.sendGroupMsg(params);\r\n  };\r\n}"],"sourceRoot":""}